{
  "active": false,
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Gerar número2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados Leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Nenhuma operação",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza Tabela": {
      "main": [
        [
          {
            "node": "Dados Leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados Leads": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Menos que 240 Caracteres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delay1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar número2": {
      "main": [
        [
          {
            "node": "Delay1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza Tabela2": {
      "main": [
        [
          {
            "node": "Dados Leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Dados Leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI4": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items5": {
      "main": [
        [],
        [
          {
            "node": "Evolution API3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain1": {
      "main": [
        [
          {
            "node": "Split de Mensagem1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API3": {
      "main": [
        [],
        [
          {
            "node": "Atualiza Tabela2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Menos que 240 Caracteres1": {
      "main": [
        [
          {
            "node": "Evolution API8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split de Mensagem1": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1 segundo1": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza Tabela",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-09T18:20:50.574Z",
  "id": "ZJDKdsN6n8SzUTIv",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[AI.T][DISPARADOR_TRAFEGO] - SKYNET",
  "nodes": [
    {
      "parameters": {
        "content": "## Disparador",
        "height": 1000,
        "width": 4220,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1340,
        -40
      ],
      "id": "078fb710-26ea-446d-a597-c163608fc837",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "14c51024-a508-47cd-af23-21fc3ca4f3fb",
              "leftValue": "={{ $('Loop Over Items').item.json.Enviar }}",
              "rightValue": "=1",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -20,
        360
      ],
      "id": "f82a173b-043d-4560-b5fb-a2ea493abf81",
      "name": "If"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -700,
        380
      ],
      "id": "5c90d3eb-10e7-4779-a9fc-2658e08c54f3",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.1,
      "position": [
        560,
        560
      ],
      "id": "f398fbda-9e94-46e2-bd80-956be8755732",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "MgUovUkOF1DLLH9r",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \t\"numero\": \"numero de telefone aqui\",\n    \"originalPhone\": \"numero de telefone original\",\n\t\"text\": \"mensagem enviada aqui\",\n  \"url\": \"link\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        760,
        560
      ],
      "id": "f2c2ac62-208c-4da7-97b8-1bceaceab4b2",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1zGiJ1BH54RXs-vVCpyo0WnRXcx3gYxXlPKq36lafxf4",
          "mode": "list",
          "cachedResultName": "DISPARADOR_TRAFEGO",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1zGiJ1BH54RXs-vVCpyo0WnRXcx3gYxXlPKq36lafxf4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1041448687,
          "mode": "list",
          "cachedResultName": "TRAFEGO PAGO_DELIVERY",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1zGiJ1BH54RXs-vVCpyo0WnRXcx3gYxXlPKq36lafxf4/edit#gid=1041448687"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "phone": "={{ $('Edit Fields1').item.json.originalPhone }}",
            "Enviar": "FALSE"
          },
          "matchingColumns": [
            "phone"
          ],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Nome",
              "displayName": "Nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Services",
              "displayName": "Services",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "City",
              "displayName": "City",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Enviar",
              "displayName": "Enviar",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2460,
        640
      ],
      "id": "11d7479e-2345-4e9b-9d06-48a38d1245c4",
      "name": "Atualiza Tabela",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Dj6DR5Chb0xYbnqN",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<CONTATO>{{ $('If').item.json.contato }}</CONTATO>\n\n<EXEMPLO> Olá. falo com {{ $('Loop Over Items').item.json.Nome }}? Vi que você trabalha com delivery, né? \n\nSe eu te mostrasse como colocar sua entrega entre os mais pedidos da região no iFood ou WhatsApp com um investimento pequeno, você gostaria de ver como funciona?\n\n// Mande uma mensagem por vez!\n\n// Se o campo Loop Over Items estiver vazio, mande só olá!\n\ntelefoneOriginal: {{ $('If').item.json.originalPhone }}\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Você é uma assistente comercial e a sua função é mandar uma mensagem de whatsapp.\n\nA mensagem deve ser no modelo acima"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        560,
        360
      ],
      "id": "bc20f64d-7321-4540-929b-b6431cce7fdc",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1zGiJ1BH54RXs-vVCpyo0WnRXcx3gYxXlPKq36lafxf4",
          "mode": "list",
          "cachedResultName": "DISPARADOR_TRAFEGO",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1zGiJ1BH54RXs-vVCpyo0WnRXcx3gYxXlPKq36lafxf4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1041448687,
          "mode": "list",
          "cachedResultName": "TRAFEGO PAGO_DELIVERY",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1zGiJ1BH54RXs-vVCpyo0WnRXcx3gYxXlPKq36lafxf4/edit#gid=1041448687"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -940,
        380
      ],
      "id": "650fe1bd-b676-4b37-acfb-43d082557158",
      "name": "Dados Leads",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Dj6DR5Chb0xYbnqN",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        140,
        60
      ],
      "id": "95519722-f581-46a0-becc-b5f242d27827",
      "name": "Nenhuma operação"
    },
    {
      "parameters": {
        "content": "## End\n****",
        "height": 240,
        "width": 380,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "d714aafb-b20b-4257-b677-475df34b3850",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "14c8c098-ce7d-44f4-9ae0-5f6273bf1b43",
              "name": "text",
              "value": "={{ $json.output.text.split('\\n\\n') }}",
              "type": "string"
            },
            {
              "id": "a3cb0f7c-f455-4165-b8cc-375d4320a037",
              "name": "numero",
              "value": "={{ $('AI Agent').item.json.output.numero }}",
              "type": "string"
            },
            {
              "id": "adf512a2-60c8-4e62-acf6-7375bf4299cc",
              "name": "originalPhone",
              "value": "={{ $json.output.originalPhone }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        960,
        360
      ],
      "id": "a0aa689a-1af4-4033-8127-3b197c14e425",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "jsCode": "return $input.all().map(item => {\n    // 1. Captura o telefone original\n    const originalPhone = item.json.phone || \"\";\n\n    // 2. Remove tudo que não for dígito\n    let contato = originalPhone.replace(/\\D/g, \"\");\n\n    // 3. Se tiver 11 dígitos, adiciona \"55\" no começo\n    if (contato.length === 11) {\n        contato = \"55\" + contato;\n    }\n\n    // 4. Verifica se possui exatamente 13 dígitos\n    const isValid = /^\\d{13}$/.test(contato);\n\n    // 5. Retorna o telefone original, o número ajustado e se é válido\n    return {\n        json: {\n            originalPhone,\n            contato,\n            valido: isValid\n        }\n    };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -460,
        400
      ],
      "id": "12848fe1-4baf-4df6-879e-98ea7bc209ec",
      "name": "Code"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "53525ae6-7d8e-4a2a-ad50-57da6e042ee0",
              "leftValue": "={{ $json.valido }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -240,
        400
      ],
      "id": "89aef7a3-b83f-4ecd-9753-7006d7283df6",
      "name": "If1"
    },
    {
      "parameters": {
        "content": "## Workflow Trigger\n**Acionar Fluxo**",
        "height": 440,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1240,
        260
      ],
      "id": "cd12ae25-3866-4f14-a612-367f86ad9b38",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "amount": "={{ $item(\"0\").$node[\"Gerar número2\"].json[\"randomNumber\"] }}",
        "unit": "minutes"
      },
      "id": "030f8196-b301-4f41-9d0c-76365cdd34db",
      "name": "Delay1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        380,
        360
      ],
      "webhookId": "4a497d97-89a9-4348-92de-91355d008998"
    },
    {
      "parameters": {
        "jsCode": "// Executa o código de geração do número aleatório\nconst min = 10;\nconst max = 8;\nconst randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\n\n// Retorna o valor em um array de objetos com a propriedade \"json\"\nreturn [\n  {\n    json: {\n      randomNumber: randomNumber,\n    },\n  },\n];"
      },
      "id": "4aeb5512-b1f8-4017-84e6-98d9a05b6739",
      "name": "Gerar número2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        180,
        360
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1200,
        40
      ],
      "id": "5a08a6ba-c5a5-4955-88d6-6801aa0e5d29",
      "name": "Schedule Trigger1",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1zGiJ1BH54RXs-vVCpyo0WnRXcx3gYxXlPKq36lafxf4",
          "mode": "list",
          "cachedResultName": "DISPARADOR_TRAFEGO",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1zGiJ1BH54RXs-vVCpyo0WnRXcx3gYxXlPKq36lafxf4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1041448687,
          "mode": "list",
          "cachedResultName": "TRAFEGO PAGO_DELIVERY",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1zGiJ1BH54RXs-vVCpyo0WnRXcx3gYxXlPKq36lafxf4/edit#gid=1041448687"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "phone": "={{ $('Edit Fields1').first().json.originalPhone }}",
            "Enviar": "FALSE"
          },
          "matchingColumns": [
            "phone"
          ],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Nome",
              "displayName": "Nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Services",
              "displayName": "Services",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "City",
              "displayName": "City",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Enviar",
              "displayName": "Enviar",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        0,
        540
      ],
      "id": "5273f3f5-e8d2-46be-aa82-6a0bb7c53169",
      "name": "Atualiza Tabela2",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Dj6DR5Chb0xYbnqN",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1160,
        380
      ],
      "id": "a514c4e5-0515-4059-83b1-49989e9f40be",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b643daee-c6a9-469a-87ca-acd5862b5d74",
      "name": "OpenAI4",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1440,
        440
      ],
      "credentials": {
        "openAiApi": {
          "id": "MgUovUkOF1DLLH9r",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "cdbd222f-bf16-401e-894f-3099bacc321b",
      "name": "Loop Over Items5",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1860,
        280
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "387a43ae-0015-41d7-abc5-c0db1c20ddac",
      "name": "OutputParser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1560,
        440
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.text }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, não é mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Sempre que tiver um link envie ele de forma separada sem alteração\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- ~tachado~ (caso seja algo que foi excluído ou alterado)\n\t\t\t- _itálico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)"
            }
          ]
        }
      },
      "id": "a8b0f3f1-cd0d-48c8-b699-5616b6ac3b5f",
      "name": "Parser  Chain1",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        1400,
        280
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "SKYNET",
        "remoteJid": "={{ $('Edit Fields1').item.json.numero }}",
        "messageText": "={{ $json.output }}",
        "options_message": {
          "delay": 1800,
          "linkPreview": false
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        2080,
        300
      ],
      "id": "9fe3530d-62fe-452f-b83d-f07bdeec747d",
      "name": "Evolution API3",
      "retryOnFail": false,
      "credentials": {
        "evolutionApi": {
          "id": "TYMFez7AZEmuKDhe",
          "name": "Evolution TALOS"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Sofia",
        "remoteJid": "={{ $('Variáveis').item.json.telefone }}",
        "messageText": "={{ $json.output }}",
        "options_message": {
          "delay": 1200
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1440,
        100
      ],
      "id": "00a1cd0f-0c22-4a94-b4b8-67cc4ed68b7f",
      "name": "Evolution API8",
      "credentials": {
        "evolutionApi": {
          "id": "TYMFez7AZEmuKDhe",
          "name": "Evolution TALOS"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7c4cdb12-9452-42a6-a39a-c268bd38dce1",
              "leftValue": "={{ $json.output.lenght }}",
              "rightValue": 90,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1180,
        360
      ],
      "id": "5536bf5e-32b3-40d8-84ef-c4c09a46d897",
      "name": "Menos que 240 Caracteres1"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "3d8fefd2-993e-4121-8edf-1435a459c24f",
      "name": "Split de Mensagem1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1700,
        280
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "96e82550-ebbb-42d3-b946-23a6ae4342a1",
      "name": "1 segundo1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2360,
        300
      ],
      "webhookId": "28412017-1182-4b80-9cdc-e5c9b466cfe5"
    }
  ],
  "pinData": {
    "Evolution API8": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      },
      {
        "json": {
          "name": "Second item",
          "code": 2
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    },
    "node:Schedule Trigger1": {
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2025-05-13T14:53:16.838Z",
      "updatedAt": "2025-05-13T14:53:16.838Z",
      "id": "STbUF5dolqkYdSIV",
      "name": "Trafego Pago"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-05-13T20:04:55.755Z",
  "versionId": "c02c3b4d-e4f1-4f66-911e-550a7b6d11d3"
}