{
  "active": false,
  "connections": {
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "buscar_documentos",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Deleta linhas antigas do documento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Supabase Vectorstore": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "buscar_documentos",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "Evolution API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Split de Mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Evolution API4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API": {
      "main": [
        [
          {
            "node": "1 segundo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Cria Hist√≥rico Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Adiciona CHAT supabase",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Atualiza CHAT Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListChats-Supabase": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListMessages-Supabase": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "ListChats-Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DisableMessage-Supabase": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SetConfig": {
      "main": [
        [
          {
            "node": "Evolution API6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier": {
      "main": [
        [
          {
            "node": "Agente Follow Up",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Text Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase2": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "ListMessages-Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Agente Follow Up",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "DisableMessage-Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Busca Telefone": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adiciona CHAT supabase": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza CHAT Supabase": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Menos que 240 Caracteres": {
      "main": [
        [
          {
            "node": "Evolution API5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split de Mensagem": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1 segundo": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retorna ID do arquivo": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deleta linhas antigas do documento": {
      "main": [
        [
          {
            "node": "Retorna ID do arquivo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cria Hist√≥rico Supabase": {
      "main": [
        [
          {
            "node": "Delete Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "buscar_documentos": {
      "ai_tool": [
        [
          {
            "node": "SOFIA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "5 Minutos antes": {
      "main": [
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2 Hora antes": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase3": {
      "main": [
        [
          {
            "node": "Atendente Chegando Call",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Supabase3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Atendente Chegando Call",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Atendente2",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Supabase4": {
      "main": [
        [
          {
            "node": "Atendente2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atendente2": {
      "main": [
        [
          {
            "node": "Evolution API7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Supabase4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API7": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Google Calendar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Atendente Chegando Call",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Atendente2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items4": {
      "main": [
        [],
        [
          {
            "node": "2 Hora antes",
            "type": "main",
            "index": 0
          },
          {
            "node": "5 Minutos antes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Get Dados",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar sessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar sessionID": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Text Memory1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Memory1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compara Get Memory1": {
      "main": [
        [
          {
            "node": "SOFIA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Memory1": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Memory1": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields8": {
      "main": [
        [
          {
            "node": "Compara Get Memory1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Get Memory 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 1": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 2": {
      "main": [
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Dados": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vari√°veis": {
      "main": [
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_para_atendimento_humano1": {
      "main": [
        [
          {
            "node": "Switch6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Block": {
      "main": [
        [
          {
            "node": "Vari√°veis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch6": {
      "main": [
        [
          {
            "node": "PARA IA",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Verificar Atendimento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Atendimento": {
      "main": [
        [
          {
            "node": "Switch Block",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Audio Memory1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListChats-Supabase2": {
      "main": [
        [
          {
            "node": "Loop Over Items6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListMessages-Supabase2": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items6": {
      "main": [
        [],
        [
          {
            "node": "ListMessages-Supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain1": {
      "main": [
        [
          {
            "node": "Evolution API8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API4": {
      "main": [
        [
          {
            "node": "ListChats-Supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook EVO": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "dados_para_atendimento_humano1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agente Follow Up": {
      "main": [
        [
          {
            "node": "Supabase2",
            "type": "main",
            "index": 0
          },
          {
            "node": "SetConfig",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atendente Chegando Call": {
      "main": [
        [
          {
            "node": "Evolution API7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Atualizar Status1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Verificar Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pegar lista de leads": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pegar mensagem": {
      "main": [
        [
          {
            "node": "Atualizar Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delay": {
      "main": [
        [
          {
            "node": "Atendente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Status": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar n√∫mero",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Mensagem 1": {
      "main": [
        [
          {
            "node": "Evolution API9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados": {
      "main": [
        [
          {
            "node": "Pegar mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Mensagem 2": {
      "main": [
        [
          {
            "node": "Evolution API9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualizar Status": {
      "main": [
        [
          {
            "node": "Pegar lista de leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualizar Active": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar n√∫mero": {
      "main": [
        [
          {
            "node": "Delay",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar n√∫mero1": {
      "main": [
        [
          {
            "node": "Switch5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch5": {
      "main": [
        [
          {
            "node": "Edit Fields10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Enviar Mensagem 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger3": {
      "main": [
        [
          {
            "node": "Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API9": {
      "main": [
        [
          {
            "node": "Atualizar Active",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atendente": {
      "main": [
        [
          {
            "node": "Gerar n√∫mero1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model7": {
      "ai_languageModel": [
        [
          {
            "node": "Atendente",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields10": {
      "main": [
        [
          {
            "node": "Enviar Mensagem 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar Mensagem": {
      "main": [
        []
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar_Eventos1": {
      "ai_tool": [
        [
          {
            "node": "SOFIA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Criar_Evento1": {
      "ai_tool": [
        [
          {
            "node": "SOFIA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "buscar_agendamentos1": {
      "ai_tool": [
        [
          {
            "node": "SOFIA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "agendamentos1": {
      "ai_tool": [
        [
          {
            "node": "SOFIA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "horarios_disponiveis1": {
      "ai_tool": [
        [
          {
            "node": "SOFIA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "cancelar_call1": {
      "ai_tool": [
        [
          {
            "node": "SOFIA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory2": {
      "ai_memory": [
        [
          {
            "node": "SOFIA",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "SOFIA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "SOFIA": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca Telefone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-04-28T23:23:35.143Z",
  "id": "3ER0j9HRRszwDkKf",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "TESTE 1 -",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "992caa8a-442d-41b7-934a-18e9cbbbc59c",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        360,
        1860
      ],
      "credentials": {
        "openAiApi": {
          "id": "MgUovUkOF1DLLH9r",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              }
            ]
          }
        }
      },
      "id": "68e6a041-353c-4765-8142-ab586fc99a55",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        -3480,
        2800
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "8d1ed10b-89a2-4dc3-8744-6d8ba4db7bd2",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -3560,
        2860
      ],
      "credentials": {
        "openAiApi": {
          "id": "MgUovUkOF1DLLH9r",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "content": "## Busca Info no RAG",
        "height": 80,
        "width": 250,
        "color": 5
      },
      "id": "53b2e193-e66d-46c9-af3a-aac50a8f1162",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        220,
        2000
      ]
    },
    {
      "parameters": {
        "content": "# Ferramenta para Adicionar um Arquivo do Google Drive ao Banco de Dados Vetorial.",
        "height": 80,
        "width": 1493,
        "color": 5
      },
      "id": "192c7b1e-904d-44a3-b378-7a0450a0a1f1",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5340,
        2300
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "6bee6513-f469-40a1-92a4-242659775d84",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -4380,
        2580
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "h6iiC1NOjgqIl4ZY",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "hour": 5
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1a51pGBLPoUj93q_Uf_tTcxNqps-cIhWI",
          "mode": "list",
          "cachedResultName": "[T.AI][PROSPECT] - ADVOGADO",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1a51pGBLPoUj93q_Uf_tTcxNqps-cIhWI"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "1de62da4-23f2-4b37-919a-64dd1bc285b2",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -5280,
        2520
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "h6iiC1NOjgqIl4ZY",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "hour": 4
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1a51pGBLPoUj93q_Uf_tTcxNqps-cIhWI",
          "mode": "list",
          "cachedResultName": "[T.AI][PROSPECT] - ADVOGADO",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1a51pGBLPoUj93q_Uf_tTcxNqps-cIhWI"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "de4afc7e-6a21-47b5-b266-4b03a3684f2a",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -5280,
        2720
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "h6iiC1NOjgqIl4ZY",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "2cf01d62-045b-4aee-82f0-f6d45ce74935",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -3700,
        2740
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "d275b3b2-7ae7-4a67-9cbc-975ba690c84e",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        80,
        1980
      ],
      "credentials": {
        "openAiApi": {
          "id": "MgUovUkOF1DLLH9r",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "c774ed34-0d67-44b7-a537-83810f357b7c",
              "name": "originalFilename",
              "value": "={{ $json.originalFilename }}",
              "type": "string"
            },
            {
              "id": "dff39c85-b4a2-45ba-a5ff-f4b311999efc",
              "name": "sha1Checksum",
              "value": "={{ $json.sha1Checksum }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e4dbfcc8-8d73-4fae-a477-1b8d9a46673b",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5100,
        2560
      ]
    },
    {
      "parameters": {
        "content": "# TREINAMENTO IA",
        "height": 80,
        "width": 396,
        "color": 5
      },
      "id": "204b8a23-0f05-419d-b8c8-5041747ed81b",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -820,
        1100
      ]
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "4a7e4036-86e8-4af0-90a5-cd179690663e",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -3960,
        2400
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "2d41d6bb-2eb0-4b82-a126-4a0ac8496978",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -3820,
        2580
      ]
    },
    {
      "parameters": {},
      "id": "765d0f9e-691f-46f9-b636-53f199e58222",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -3340,
        2900
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "44dc1fc1-3ac9-4ef1-b3e8-ca2ba56c1628",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        -3680,
        2580
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 2
        }
      },
      "id": "9863e4ad-05e7-4aac-9917-fd1cd2677249",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -4200,
        2580
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "db175898-299d-432a-b2b3-6b86a83030ff",
      "name": "Insert into Supabase Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -3500,
        2580
      ],
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "8abe0d9c-afa5-4f34-8262-12ebec42a21d",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        60,
        1860
      ],
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "6d2d9779-28ba-414f-8556-b9fa019346f4",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -3960,
        2580
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 820,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -840,
        1080
      ],
      "typeVersion": 1,
      "id": "13a4a7e0-85c7-4593-bcc6-9260b62b1f61",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "",
        "height": 380,
        "width": 480,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        20,
        1720
      ],
      "typeVersion": 1,
      "id": "e5eb4421-7aa9-4343-a918-eb70d0a0f7a2",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "",
        "height": 800,
        "width": 2180,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5360,
        2280
      ],
      "typeVersion": 1,
      "id": "992dc78a-caf3-43aa-a4c1-a10972554085",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Arquivos criados em uma pasta espec√≠fica > Verificar o tipo de arquivo e realizar convers√£o > Extrair o texto > Adicionar ao Vector Store",
        "height": 80,
        "width": 1600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5340,
        2980
      ],
      "typeVersion": 1,
      "id": "05883c32-08de-4d2c-aaf4-7b8bc5f43837",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Gatilho de Monitoramento",
        "height": 480,
        "width": 213,
        "color": 5
      },
      "id": "2e881aeb-212c-4d8a-a418-07eea1d43e50",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5320,
        2420
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b4b6f1c9-4646-4b52-9305-5561e87a67c8",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        220,
        840
      ],
      "credentials": {
        "openAiApi": {
          "id": "MgUovUkOF1DLLH9r",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "efcd97ce-55ce-4490-ac49-4d1be7044b2b",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        640,
        680
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "c7980dcc-c1cf-41f4-88f4-dfd352d913f3",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        340,
        840
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a sa√≠da no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, n√£o √© mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Sempre que tiver um link envie ele de forma separada sem altera√ß√£o\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- ~tachado~ (caso seja algo que foi exclu√≠do ou alterado)\n\t\t\t- _it√°lico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)"
            }
          ]
        }
      },
      "id": "5cf62f1a-7395-4d00-8a73-88ecd5286cc7",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        180,
        680
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 560,
        "width": 1180,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        400
      ],
      "typeVersion": 1,
      "id": "84fac8b8-738c-4eea-8616-25f1e1e6dea9",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "# Divis√£o de Mensagens Inteligente - Texto",
        "height": 80,
        "width": 736,
        "color": 5
      },
      "id": "4a47c3b0-1d9d-4c34-89fb-41ad8e374c58",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        20,
        420
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 740,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3700,
        1260
      ],
      "typeVersion": 1,
      "id": "166d449c-d0d0-4bbd-8d8b-f016c8380ae4",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "# Gera/Consulta sessionId",
        "height": 80,
        "width": 596,
        "color": 5
      },
      "id": "11a4f5a6-f4b8-441b-bc7a-25f33dc22b5e",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3680,
        1280
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "0985904e-7d4e-4fba-ae26-2c44200855e1",
                    "leftValue": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "imagem"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "id": "d2ec73d5-ba07-47d7-9ce3-2a796e5e94aa",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -180,
        1140
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 780,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4880,
        1260
      ],
      "typeVersion": 1,
      "id": "a32a15a2-b1dd-499d-b621-bc4e68a6a675",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4420,
        1040
      ],
      "typeVersion": 1,
      "id": "20c1131a-1fe1-4a0d-9d31-ddf8276b4a0a",
      "name": "Sticky Note31"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3640,
        820
      ],
      "typeVersion": 1,
      "id": "283abfab-8e9f-4035-be55-9ae8911cae48",
      "name": "Sticky Note33"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -4560,
        2560
      ],
      "id": "81982679-d803-4d7b-8175-9933764f103e",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3380,
        1040
      ],
      "typeVersion": 1,
      "id": "202c4ac1-e56c-413c-8322-a62b50f517fa",
      "name": "Sticky Note37"
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 360,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4080,
        1260
      ],
      "typeVersion": 1,
      "id": "0e437feb-bfcf-475b-8615-6c716403380b",
      "name": "Sticky Note42"
    },
    {
      "parameters": {
        "content": "# Dados",
        "height": 80,
        "width": 150,
        "color": 5
      },
      "id": "0cb9e55d-8eaf-4cff-bf8b-bf65cc193fe1",
      "name": "Sticky Note43",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4060,
        1280
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "https://meet.google.com/",
                    "operator": {
                      "type": "string",
                      "operation": "notContains"
                    },
                    "id": "688e7624-00b1-4b2e-beea-c22d303a1669"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Fluxo Normal"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "820760d6-3546-4007-8917-55d366a74261",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "https://meet.google.com",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Avisa grupo"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -320,
        1320
      ],
      "id": "34480321-81c2-48b6-bd4a-98e5e9b57ad4",
      "name": "Switch2"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Sofia",
        "remoteJid": "={{ $('Vari√°veis').item.json.telefone }}",
        "messageText": "={{ $json.output }}",
        "options_message": {
          "delay": 1200,
          "linkPreview": false
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        860,
        700
      ],
      "id": "b211efbc-4769-4ce8-815b-e35dbf45319c",
      "name": "Evolution API",
      "credentials": {
        "evolutionApi": {
          "id": "TYMFez7AZEmuKDhe",
          "name": "Evolution TALOS"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        660,
        180
      ],
      "id": "8dcbd504-c5cf-4f40-ab0e-0784c9db0826",
      "name": "Merge1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "defac08a-6745-422b-bb05-90da9f47d91b",
              "leftValue": "={{ $('Busca Telefone').last().json.values() }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        200,
        140
      ],
      "id": "7ecc5f0e-ea5c-4141-8e0c-cced9d3b5947",
      "name": "If4"
    },
    {
      "parameters": {
        "content": "",
        "height": 380,
        "width": 1180,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "d0f55732-1138-4fc7-968a-8bc92762193f",
      "name": "Sticky Note54"
    },
    {
      "parameters": {
        "content": "# Cadastra Chat Supabase",
        "height": 80,
        "width": 450,
        "color": 5
      },
      "id": "d1c878b3-fd40-434f-a060-b9fc5e5d8fc3",
      "name": "Sticky Note55",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        20,
        20
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Sofia",
        "remoteJid": "={{ $('Vari√°veis').item.json.telefone }}",
        "messageText": "={{ $json.output }}",
        "options_message": {
          "delay": 1200
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        220,
        500
      ],
      "id": "c1c8a996-faf0-48c1-8b20-3479b97db137",
      "name": "Evolution API5",
      "credentials": {
        "evolutionApi": {
          "id": "TYMFez7AZEmuKDhe",
          "name": "Evolution TALOS"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "app",
              "condition": "eq",
              "keyValue": "terapeuta"
            },
            {
              "keyName": "updated_at",
              "condition": "gt",
              "keyValue": "={{ $now.plus(5,'minutes') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -5160,
        1920
      ],
      "id": "d2dad8f3-1912-48e4-9330-5ee126354f73",
      "name": "ListChats-Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chat_messages",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $json.phone }}"
            },
            {
              "keyName": "active",
              "condition": "eq",
              "keyValue": "true"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4760,
        1940
      ],
      "id": "e2090a68-d4a5-4ae5-9ae1-697601191771",
      "name": "ListMessages-Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "daysInterval": 2,
              "triggerAtHour": 10,
              "triggerAtMinute": 45
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -5320,
        1920
      ],
      "id": "47e149f9-b7bc-4cee-a46d-b3bbbf71d89f",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "chat_messages",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Aggregate1')?.item?.json?.conversas?.last()?.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "active",
              "fieldValue": "false"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3360,
        2040
      ],
      "id": "da06d310-4025-4f79-93aa-c5e26dc3881a",
      "name": "DisableMessage-Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c9c00627-84a9-49a9-bc7e-d923a5918346",
              "name": "output",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "0e34f673-b6dc-4748-89d2-a178dfe91853",
              "name": "phone",
              "value": "={{ $('Aggregate1').item.json.conversas.last().phone }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3640,
        1740
      ],
      "id": "7bdaeaf0-0471-4da5-9246-4dc75d11c6c9",
      "name": "SetConfig"
    },
    {
      "parameters": {
        "inputText": "={{ $json.texto }}",
        "categories": {
          "categories": [
            {
              "category": "pendente_resposta",
              "description": "A conversa est√° pendente devido a uma informa√ß√£o que o cliente ficou de fornecer ou confirmar, ou est√° pendente de marcar a reuni√£o"
            },
            {
              "category": "encerrada",
              "description": "Houve um desfecho da conversa  ou agendamento de uma reuni√£oe o agente de IA se despediu"
            },
            {
              "category": "sem_resposta",
              "description": "=Se o cliente n√£o respondeu mais as mensagens do agente - mensagem do cliente vazia"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1,
      "position": [
        -4280,
        1940
      ],
      "id": "e7b1cc1e-8859-4ca3-b4e7-d560b618c2e9",
      "name": "Text Classifier"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "conversas",
        "include": "specifiedFields",
        "fieldsToInclude": "id,message_type,created_at,user_message, bot_message,phone, conversation_id",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -4600,
        1940
      ],
      "id": "595162b8-8266-43cd-b65c-00eaa9bd9381",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "jsCode": "return $('Aggregate1').all().map(item => {\n  // Tenta acessar a propriedade 'conversas' e verifica se ela √© um array\n  const conversas = item.json.conversas || []; // Garante que √© pelo menos um array vazio\n\n  if (!Array.isArray(conversas)) {\n    throw new Error(\"A propriedade 'conversas' n√£o √© um array.\");\n  }\n\n  // Processa cada conversa e verifica as mensagens\n  const textoUnico = conversas.map(conversa => {\n    const cliente = conversa.user_message || \"sem mensagem do chatbot\";\n    const agente = conversa.bot_message || \"sem resposta\";\n    \n    // Verifica se a data existe e formata\n    const dataOriginal = conversa.created_at || \"Data da Mensagem indispon√≠vel\";\n    const dataFormatada = dataOriginal !== \"Data da Mensagem indispon√≠vel\"\n      ? formatarData(dataOriginal)\n      : dataOriginal;\n\n    return `em: ${dataFormatada}\\n\\n - agente(chatbot): ${agente} \\n - cliente: ${cliente}\\n`;\n  }).join('\\n\\n');\n\n  // Retorna o texto final como resultado\n  return {\n    json: {\n      texto: textoUnico\n    }\n  };\n});\n\n// Fun√ß√£o para formatar a data\nfunction formatarData(dataString) {\n  const data = new Date(dataString); // Converte a string em objeto Date\n  if (isNaN(data)) {\n    return \"Data inv√°lida\"; // Retorna se a data n√£o for v√°lida\n  }\n  \n  // Formata no padr√£o DD/MM/YYYY HH:mm\n  const dia = String(data.getDate()).padStart(2, '0');\n  const mes = String(data.getMonth() + 1).padStart(2, '0'); // M√™s come√ßa em 0\n  const ano = data.getFullYear();\n  const horas = String(data.getHours()).padStart(2, '0');\n  const minutos = String(data.getMinutes()).padStart(2, '0');\n  \n  return `${dia}/${mes}/${ano} ${horas}:${minutos}`;\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4420,
        1940
      ],
      "id": "2edbcabc-1940-476b-9287-bc6932116454",
      "name": "Code4"
    },
    {
      "parameters": {
        "tableId": "chat_messages",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $('Aggregate1').item.json.conversas.last().phone }}"
            },
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $('Aggregate1').item.json.conversas.last().phone }}"
            },
            {
              "fieldId": "message_type",
              "fieldValue": "={{ $('Aggregate1').item.json.conversas.last().message_type }}"
            },
            {
              "fieldId": "bot_message",
              "fieldValue": "={{ $json.text }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3640,
        1920
      ],
      "id": "21eb0c54-0845-4954-a7c6-d4568739107f",
      "name": "Supabase2",
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -4960,
        1920
      ],
      "id": "07cb0488-9f75-4a41-bb7e-d0bd65549f27",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -3840,
        1880
      ],
      "id": "aa53db1c-1c06-4d05-ad17-73e2d2217274",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "MgUovUkOF1DLLH9r",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -3500,
        2040
      ],
      "id": "28085878-0e27-4d5a-ab1d-ef4999a27c56",
      "name": "Wait2",
      "webhookId": "cd1f35d3-c129-4957-a72b-9f1fea576935"
    },
    {
      "parameters": {
        "content": "",
        "height": 520,
        "width": 2180,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5360,
        1720
      ],
      "typeVersion": 1,
      "id": "e0515bde-5f79-4259-8c9d-57772d9f10c7",
      "name": "Sticky Note58"
    },
    {
      "parameters": {
        "content": "# Follow up Whatsapp",
        "height": 100,
        "width": 393,
        "color": 5
      },
      "id": "619d5f22-953b-4df9-8f68-bbcf463e05be",
      "name": "Sticky Note59",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5340,
        1740
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Sofia",
        "remoteJid": "={{ $json.phone }}",
        "messageText": "={{ $json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -3500,
        1740
      ],
      "id": "9654ef1e-3542-4c9d-8b20-4fc9504cdeea",
      "name": "Evolution API6",
      "credentials": {
        "evolutionApi": {
          "id": "TYMFez7AZEmuKDhe",
          "name": "Evolution TALOS"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -4280,
        2100
      ],
      "id": "8bb84251-fbcf-4bda-a802-39f270818c9f",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "MgUovUkOF1DLLH9r",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "keyValue": "={{ $('Vari√°veis').item.json.telefone }}"
            },
            {
              "keyName": "app",
              "keyValue": "skynet"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        60,
        140
      ],
      "id": "97f61c85-324b-4ddc-9214-358e9ef6abc4",
      "name": "Busca Telefone",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "tableId": "chats",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $('Vari√°veis').item.json.telefone }}"
            },
            {
              "fieldId": "updated_at",
              "fieldValue": "={{ $now}}"
            },
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $('Code1').item.json.sessionId }}"
            },
            {
              "fieldId": "app",
              "fieldValue": "terapeuta"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        440,
        80
      ],
      "id": "672e3089-e1f0-47b8-b2de-1dd4b62e17aa",
      "name": "Adiciona CHAT supabase",
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Vari√°veis').item.json.telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "updated_at",
              "fieldValue": "={{ $now }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        440,
        240
      ],
      "id": "65c8b4fe-43ce-42f9-a927-1c6c35546de0",
      "name": "Atualiza CHAT Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "tableId": "chat_messages",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $json.phone }}"
            },
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $json.phone }}"
            },
            {
              "fieldId": "bot_message",
              "fieldValue": "={{ $('SOFIA').item.json.output }}"
            },
            {
              "fieldId": "message_type",
              "fieldValue": "={{ $('dados_para_atendimento_humano1').item.json.message.content_type }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        840,
        180
      ],
      "id": "8c3c30c5-96db-4f83-8989-3022441849da",
      "name": "Cria Hist√≥rico Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7c4cdb12-9452-42a6-a39a-c268bd38dce1",
              "leftValue": "={{ $json.output.lenght }}",
              "rightValue": 170,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        40,
        600
      ],
      "id": "b7649bfc-8e8a-42fe-b158-9400de990ed6",
      "name": "Menos que 240 Caracteres"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "cb4321c7-63f1-4cc6-b5b3-e86ee0482161",
      "name": "Split de Mensagem",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        480,
        680
      ]
    },
    {
      "parameters": {
        "amount": 6
      },
      "id": "bfdaa71d-8c44-498f-807f-d41d92502a00",
      "name": "1 segundo",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1000,
        700
      ],
      "webhookId": "2ec24a1a-31fc-49f0-8e2f-532b131f1bd9"
    },
    {
      "parameters": {
        "jsCode": "return $items(\"Set File ID\").map(item => {\n  return {\n    json: {\n      file_id: item.json.file_id,\n      file_type: item.json.file_type\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4740,
        2560
      ],
      "id": "c696af4b-1f68-436e-88b5-224a3a801d05",
      "name": "Retorna ID do arquivo"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "6da89a82-3d11-44bb-a069-2ac322118fa8",
      "name": "Deleta linhas antigas do documento",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4940,
        2560
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table dados_cliente (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  telefone text, \n  sessionid text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4100,
        840
      ],
      "id": "b4748857-7baf-4940-9c12-61ad33876dba",
      "name": "Cria Tabela Dados Cliente",
      "credentials": {
        "postgres": {
          "id": "UG5YhV2gAqdPfWm8",
          "name": "Postgres SKYNET"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Create a table to store your documents\ncreate table documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3060,
        840
      ],
      "id": "ff67774c-9cfd-4259-be16-c2b7405bbd4e",
      "name": "Cria Tabela Documentos",
      "credentials": {
        "postgres": {
          "id": "UG5YhV2gAqdPfWm8",
          "name": "Postgres SKYNET"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from documents",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3320,
        1060
      ],
      "id": "07d7cd6b-f94a-4560-8c48-d6fa834b6c29",
      "name": "Deleta Conte√∫do Documentos",
      "credentials": {
        "postgres": {
          "id": "UG5YhV2gAqdPfWm8",
          "name": "Postgres SKYNET"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3380,
        820
      ],
      "typeVersion": 1,
      "id": "c914b222-0848-4d88-bf72-3b9639d1a5eb",
      "name": "Sticky Note40"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3120,
        820
      ],
      "typeVersion": 1,
      "id": "9e41ae62-993e-49b3-8a3f-2dcce6a38348",
      "name": "Sticky Note48"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4420,
        820
      ],
      "typeVersion": 1,
      "id": "67734294-89ad-4832-b71a-bd4e981919d7",
      "name": "Sticky Note49"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3900,
        820
      ],
      "typeVersion": 1,
      "id": "ac2d2b2b-ee60-4d8b-a19b-dbd9987c9e80",
      "name": "Sticky Note50"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3900,
        1040
      ],
      "typeVersion": 1,
      "id": "20a0ac95-3bb6-481c-8aaf-cceec789e2c5",
      "name": "Sticky Note56"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4160,
        820
      ],
      "typeVersion": 1,
      "id": "e76e398f-61fb-4e58-b20b-86db090cf7c2",
      "name": "Sticky Note57"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from n8n_chat_histories",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4360,
        1060
      ],
      "id": "15bd0986-8260-4eee-a8f6-9e960e90f824",
      "name": "Deleta Hist√≥rico",
      "credentials": {
        "postgres": {
          "id": "UG5YhV2gAqdPfWm8",
          "name": "Postgres SKYNET"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create function match_documents (\n  query_embedding vector(1536),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents.embedding <=> query_embedding) as similarity\n  from documents\n  where metadata @> filter\n  order by documents.embedding <=> query_embedding\n  limit match_count;\nend;\n$$;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3320,
        840
      ],
      "id": "0e929e73-4a5a-4475-8b08-e5bc80f187b8",
      "name": "Cria fun√ß√£o Busca em Vetor",
      "credentials": {
        "postgres": {
          "id": "UG5YhV2gAqdPfWm8",
          "name": "Postgres SKYNET"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create extension vector;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3580,
        840
      ],
      "id": "91c4fa93-583d-430a-806f-fc2e578052c9",
      "name": "Cria Extens√£o Vetor",
      "credentials": {
        "postgres": {
          "id": "UG5YhV2gAqdPfWm8",
          "name": "Postgres SKYNET"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table chats (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  phone text,\n  updated_at text, \n  app text,\n  conversation_id text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3840,
        840
      ],
      "id": "25a5bd50-871d-4426-8acc-f5afd4ca2a1e",
      "name": "Cria Tabela Chats",
      "credentials": {
        "postgres": {
          "id": "UG5YhV2gAqdPfWm8",
          "name": "Postgres SKYNET"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3640,
        1040
      ],
      "typeVersion": 1,
      "id": "6d80297b-b520-4ef8-af10-ea78ade4d119",
      "name": "Sticky Note65"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from chats",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3580,
        1060
      ],
      "id": "600e3080-6080-47bd-9fdc-36c614451fc5",
      "name": "Deleta Conte√∫do Chats",
      "credentials": {
        "postgres": {
          "id": "UG5YhV2gAqdPfWm8",
          "name": "Postgres SKYNET"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from dados_cliente",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3840,
        1060
      ],
      "id": "d737a159-b14b-4854-a6e3-c437ce1994d0",
      "name": "Deleta Conte√∫do Dados Cliente",
      "credentials": {
        "postgres": {
          "id": "UG5YhV2gAqdPfWm8",
          "name": "Postgres SKYNET"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4160,
        1040
      ],
      "typeVersion": 1,
      "id": "179b815d-aaef-45ae-bf10-babf420e3a4d",
      "name": "Sticky Note66"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from chat_messages",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4100,
        1060
      ],
      "id": "19e0bc95-7b96-4a3e-8aea-97f206da5720",
      "name": "Deleta Conte√∫do Chat_Messages",
      "credentials": {
        "postgres": {
          "id": "UG5YhV2gAqdPfWm8",
          "name": "Postgres SKYNET"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE TABLE chat_messages (\n  id BIGSERIAL PRIMARY KEY,\n  created_at TIMESTAMPTZ, \n  phone TEXT,\n  conversation_id TEXT, \n  bot_message TEXT,\n  user_message TEXT, \n  message_type TEXT,\n  active BOOLEAN DEFAULT TRUE\n);\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -4360,
        840
      ],
      "id": "b8b2194a-3829-4ece-8c41-15cb06cf3233",
      "name": "Cria Tabela Chat_Messages",
      "credentials": {
        "postgres": {
          "id": "UG5YhV2gAqdPfWm8",
          "name": "Postgres SKYNET"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5360,
        1260
      ],
      "typeVersion": 1,
      "id": "0116eca6-c7f8-40ce-bfa7-38455e6832d3",
      "name": "Sticky Note32"
    },
    {
      "parameters": {
        "content": "# Webhook",
        "height": 80,
        "width": 196,
        "color": 5
      },
      "id": "b62c3f5a-fdec-4192-b648-c883f0bd3780",
      "name": "Sticky Note67",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5340,
        1280
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Code1').item.json.sessionId }}"
      },
      "id": "f5d28eeb-9f5e-46ff-96c6-b8bcefdfff13",
      "name": "Delete Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1000,
        180
      ],
      "credentials": {
        "redis": {
          "id": "BDBV0IXWHWreEqF9",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "name": "user_documents",
        "description": "Use esta ferramenta sempre que o lead fizer uma pergunta fora do seu escopo de conhecimento, como d√∫vidas t√©cnicas espec√≠ficas, quest√µes jur√≠dicas detalhadas, informa√ß√µes sobre sistemas ou funcionalidades que voc√™ n√£o domina com seguran√ßa. Ap√≥s buscar:\n\n- Se a resposta for encontrada: explique de forma clara e natural, com o mesmo tom leve e consultivo de sempre, sem parecer que est√° lendo um manual.\n\n- Se a resposta **n√£o for encontrada** ou estiver inconclusiva: **n√£o trave a conversa e nunca diga que n√£o sabe**. Em vez disso, responda com leveza e retome o foco do lead com uma pergunta consultiva. Exemplo:\n\n  'Olha, essa parte mais t√©cnica eu confesso que fugi um pouco üòÖ Mas posso levantar com o time depois, se quiser.'\n\nO objetivo principal √© **manter a fluidez da conversa** e voltar para os desafios do lead, mesmo quando uma resposta exata n√£o estiver dispon√≠vel. Essa ferramenta √© um apoio, mas a conversa sempre continua de forma estrat√©gica e leve.\""
      },
      "id": "45db3839-7e45-4a5a-8fa8-baef4e402ec2",
      "name": "buscar_documentos",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        140,
        1740
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "9c76ab6656ebdab0718b137f28bb5c7fcd39ab6de96017fb2f087ad64b3cce56@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "[T.IA] - Calls"
        },
        "returnAll": true,
        "options": {
          "timeMin": "={{ $json.timestamp }}"
        }
      },
      "id": "b098a93e-90bf-429c-af3b-6d4901d2cd13",
      "name": "Google Calendar",
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.2,
      "position": [
        -2440,
        2480
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "xQ5iGecKbkp1HJdP",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "806d2106-d234-428e-a909-db00044fc342",
              "leftValue": "={{ $json.start.dateTime }}",
              "rightValue": "={{ $('Schedule Trigger1').item.json.timestamp.toDateTime().plus(0, minutes) }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            },
            {
              "id": "aab42f56-d82f-434d-8319-00e3c2c690f3",
              "leftValue": "={{ $json.start.dateTime }}",
              "rightValue": "={{ $('Schedule Trigger1').item.json.timestamp.toDateTime().plus(5, minutes) }}",
              "operator": {
                "type": "dateTime",
                "operation": "before"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2240,
        2700
      ],
      "id": "66a5e43a-d06d-4b62-b21b-072c3345dda6",
      "name": "5 Minutos antes",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "806d2106-d234-428e-a909-db00044fc342",
              "leftValue": "={{ $json.start.dateTime }}",
              "rightValue": "={{ $('Schedule Trigger1').item.json.timestamp.toDateTime().plus(115, minutes) }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            },
            {
              "id": "aab42f56-d82f-434d-8319-00e3c2c690f3",
              "leftValue": "={{ $json.start.dateTime }}",
              "rightValue": "={{ $('Schedule Trigger1').item.json.timestamp.toDateTime().plus(120, minutes) }}",
              "operator": {
                "type": "dateTime",
                "operation": "before"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -2240,
        2440
      ],
      "id": "d83e5609-e583-4f46-9f58-39d26d60a6f9",
      "name": "2 Hora antes",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5427ed1f-2dd2-4f7c-b7f4-9b13cd780bc7",
              "leftValue": "={{ $('Loop Over Items4').item.json.kind }}",
              "rightValue": "calendar#event",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2040,
        2440
      ],
      "id": "58c5c345-56e1-408d-9aa8-d2fd5d8e7744",
      "name": "If7"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5427ed1f-2dd2-4f7c-b7f4-9b13cd780bc7",
              "leftValue": "={{ $json.kind }}",
              "rightValue": "calendar#event",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2040,
        2700
      ],
      "id": "a7e78586-d17a-46b8-bef9-df4d1bb3f560",
      "name": "If8"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Loop Over Items4').item.json.description }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1620,
        2420
      ],
      "id": "9b372035-6a45-4299-b012-a353bb57cbc0",
      "name": "Supabase3",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a5af6299-68f1-4d3a-b2a7-c2ed65aa4ae6",
              "name": "remoteJid",
              "value": "={{ $('Loop Over Items4').item.json.description }}",
              "type": "string"
            },
            {
              "id": "fc721c8e-bfd6-4364-9c30-b0038118856f",
              "name": "Tempo",
              "value": "Crie uma mensagem avisando que falta 2 horas para a reuni√£o ",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1800,
        2420
      ],
      "id": "5d664362-81b4-4078-a520-8c59acb1cf61",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $fromAI('session_id') }}",
        "contextWindowLength": 100
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -1340,
        2580
      ],
      "id": "cde3fbd4-5758-4f7e-a7fe-97c69c0fc319",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "UG5YhV2gAqdPfWm8",
          "name": "Postgres SKYNET"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Google Calendar').item.json.description }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1620,
        2680
      ],
      "id": "a37f66b1-1187-489c-b314-ea76d2b18948",
      "name": "Supabase4",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Edit Fields2').item.json.Tempo }}",
        "options": {
          "systemMessage": "=Voc√™ foi acionado pois vai avisar quanto tempo falta para a reuni√£o, diga apenas o tempo que falta e se precisa de algo antes da reuni√£o, sem dicas de uso ou informa√ß√µes extras"
        }
      },
      "id": "e7a85589-0f70-4504-855f-4194fe6690e2",
      "name": "Atendente2",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -1440,
        2700
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c930cacf-b5ee-4120-a192-d68715d71d57",
              "name": "remoteJid",
              "value": "={{ $('Google Calendar').item.json.description }}",
              "type": "string"
            },
            {
              "id": "e7775c3f-04e5-4b6f-9695-dad8654b7ff8",
              "name": "Tempo",
              "value": "Crie uma mensagem avisando que falta 5 minutos para a reuni√£o ",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1840,
        2680
      ],
      "id": "80243c37-1012-4edb-b18d-34d9446e680b",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Sofia",
        "remoteJid": "={{ $('Google Calendar').item.json.description }}",
        "messageText": "={{ $json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -1100,
        2560
      ],
      "id": "7c67e858-1ac4-4650-9d4d-7c1842573460",
      "name": "Evolution API7",
      "credentials": {
        "evolutionApi": {
          "id": "TYMFez7AZEmuKDhe",
          "name": "Evolution TALOS"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 980,
        "width": 2523,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2980,
        2140
      ],
      "typeVersion": 1,
      "id": "a1d91623-104d-4dc4-bd44-d7350aa5c69d",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "# AVISO REUNI√ÉO CHEGANDO",
        "height": 80,
        "width": 551.2183277924504,
        "color": 5
      },
      "id": "979abbcd-1d56-42e4-b242-816fb22b558a",
      "name": "Sticky Note27",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2940,
        2160
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "id": "151c9b59-b30b-4861-92af-4654627ee4e7",
      "name": "Schedule Trigger1",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2920,
        2520
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -1480,
        2580
      ],
      "id": "90a38dbb-f3ad-488e-ae22-9f3e2d732c29",
      "name": "OpenAI Chat Model5",
      "credentials": {
        "openAiApi": {
          "id": "MgUovUkOF1DLLH9r",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "990502fb-5134-4c8f-9aac-ea748b1f09da",
      "name": "Loop Over Items4",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -2600,
        2320
      ]
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -840,
        2740
      ],
      "id": "14aa3a6c-1cc5-4631-b1c5-eab633d59051",
      "name": "Wait",
      "webhookId": "1652a979-d426-42ae-8458-da1ee045bfb4"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3660,
        1440
      ],
      "id": "cd48d230-84cb-4070-8b64-3a43f2c82402",
      "name": "Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3480,
        1440
      ],
      "id": "0b43ae3f-9c32-41ce-a213-79fa9eea8db9",
      "name": "If1"
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -3360,
        1540
      ],
      "id": "18960992-2c17-4806-ab24-f14a84d73b92",
      "name": "Gerar sessionID"
    },
    {
      "parameters": {
        "tableId": "dados_cliente",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "sessionid",
              "fieldValue": "={{ $json.data }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3220,
        1540
      ],
      "id": "d56bee27-71c5-40e5-bf3c-ce1ba72cf7bf",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 1180,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2040,
        1080
      ],
      "typeVersion": 1,
      "id": "4a017ee1-a29a-4cfa-be78-3dfa31b43586",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 880,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2940,
        1080
      ],
      "typeVersion": 1,
      "id": "7f94d5e3-46f4-4b41-9fb2-9710cce946fb",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "jsCode": "// Obt√©m os valores dos n√≥s anteriores\nconst sessionid1 = $input.item.json.data;  // Do n√≥ \"Gerar sessionID\"\nconst sessionid2 = $input.item.json.sessionid;  // Do n√≥ \"Supabase\"\n\n// Retorna apenas o que existir, chamando sempre de \"sessionId\"\nreturn [{ sessionId: sessionid1 || sessionid2 || null }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3100,
        1380
      ],
      "id": "6e9c1c4f-c972-401a-b8b6-f7624a2b5526",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now }}",
        "format": "custom",
        "customFormat": "dd-MM-yyyy",
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -3860,
        1440
      ],
      "id": "da8a8bfe-07ee-4017-89ac-4367b444a9e7",
      "name": "Date & Time1"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.png",
          "mimeType": "image/png"
        }
      },
      "id": "17b4d3f1-c702-42a9-b0ec-9ff5978a7cde",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2740,
        1540
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "edfe1add-66e8-47c9-827d-fccb820837cd",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2880,
        1540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ade56c50-1520-4760-8df5-e99617d6d3ad",
              "leftValue": "={{ $('Webhook EVO').item.json.body.data.message.imageMessage.caption }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2b52f977-57d9-400e-810e-7c093ee9a627",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2440,
        1540
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}, {{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "bdf67caf-6752-45fb-abd5-c8e7bec2ebc6",
      "name": "Redis4",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2180,
        1560
      ],
      "credentials": {
        "redis": {
          "id": "BDBV0IXWHWreEqF9",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "d281f6db-4f38-4bed-8932-ad77c38a24a3",
      "name": "Redis5",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2180,
        1420
      ],
      "credentials": {
        "redis": {
          "id": "BDBV0IXWHWreEqF9",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.message.audioMessage.url }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    },
                    "id": "fcbc3801-3c9b-4c27-951e-6570127ae33e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c0e434dd-1268-421d-b81b-3a5e90ed9550",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "4ebe1172-798f-4788-9f6a-752e929b7385",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2920,
        1300
      ]
    },
    {
      "parameters": {
        "content": "# Mensagem Picotada",
        "height": 80,
        "width": 396,
        "color": 5
      },
      "id": "d961e6a2-be5f-4354-b94d-39f0777c1326",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1680,
        1120
      ]
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Resumo curto da imagem. Responda sem acento, sem hifens",
        "inputType": "base64",
        "options": {}
      },
      "id": "17907211-4576-433c-962f-d33e00df1040",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -2580,
        1540
      ],
      "credentials": {
        "openAiApi": {
          "id": "DEJ1CV4zR9WS2ILl",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d5a342e9-585b-42ea-be44-644adae10199",
              "leftValue": "={{ $json.Redis2 }}",
              "rightValue": "={{ $json.Redis1 }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "affc00aa-82cb-464d-9454-a6d64fc2eda6",
      "name": "Compara Get Memory1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1240,
        1340
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $('Webhook EVO').item.json.body.data.message.conversation }}",
        "tail": true
      },
      "id": "177e0bc6-0558-43ab-85f8-23809abc0fd4",
      "name": "Text Memory1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2180,
        1100
      ],
      "credentials": {
        "redis": {
          "id": "BDBV0IXWHWreEqF9",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $json.text }}",
        "tail": true
      },
      "id": "0849e471-d3f0-48ce-ad5b-ddf45e269aad",
      "name": "Audio Memory1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2180,
        1260
      ],
      "credentials": {
        "redis": {
          "id": "BDBV0IXWHWreEqF9",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f336a1ff-e577-489d-a739-1eb8bd509245",
              "name": "Redis2",
              "value": "={{ $json.propertyName }}",
              "type": "string"
            },
            {
              "id": "946d1420-e379-46e3-8fcd-3816340fbabb",
              "name": "Redis1",
              "value": "={{ $('Get Memory 1').item.json.propertyName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "7d376013-e892-4df5-aa44-6855bf7c7f72",
      "name": "Edit Fields8",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1420,
        1340
      ]
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "3fef4d07-fc7b-49bf-96f9-56809bc16754",
      "name": "Wait3",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1760,
        1340
      ],
      "webhookId": "7508fa49-bc87-45fc-bc55-e92f0d00664a"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Code1').item.json.sessionId }}",
        "options": {}
      },
      "id": "3ac75c29-e8e2-403b-b7a3-0af5994f4b9c",
      "name": "Get Memory 1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1940,
        1340
      ],
      "credentials": {
        "redis": {
          "id": "BDBV0IXWHWreEqF9",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Code1').item.json.sessionId }}",
        "options": {}
      },
      "id": "ff37f0b2-9df4-4510-b550-31755dcce145",
      "name": "Get Memory 2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1600,
        1340
      ],
      "credentials": {
        "redis": {
          "id": "BDBV0IXWHWreEqF9",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $json.telefone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3260,
        1380
      ],
      "id": "22b8d21d-6ba9-4d61-8f01-2bbb6354da5f",
      "name": "Get Dados",
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d88c137-383f-4307-b3cc-1f6a560ea67b",
              "name": "telefone",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "7e2f520e-4952-425b-82ca-792cc46680d4",
              "name": "mensagem",
              "value": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "de1388b1-a6e4-42df-a6a5-7e9b4594f97d",
              "name": "body.event",
              "value": "={{ $('Webhook EVO').item.json.body.event }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8d415298-8fd3-4479-870b-1fabb005416e",
      "name": "Vari√°veis",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4020,
        1440
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f16b1bf-1a3e-4029-8d7a-1bccb919ee43",
              "name": "message.message_id",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.id || '' }}",
              "type": "string"
            },
            {
              "id": "11800d83-ecca-4f9c-a878-a2419db0c8e9",
              "name": "message.chat_id",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid || '' }}",
              "type": "string"
            },
            {
              "id": "c33f9527-e661-49e5-8e5e-64f3b430928a",
              "name": "message.content_type",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.extendedTextMessage ? 'text' : '' }}{{ $('Webhook EVO').item.json.body.data.message.conversation ? 'text' : '' }}{{ $('Webhook EVO').item.json.body.data.message.audioMessage ? 'audio' : '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage ? 'image' : '' }}",
              "type": "string"
            },
            {
              "id": "06eba1c9-cff0-4f68-b6da-6bb0092466b7",
              "name": "message.content",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.extendedTextMessage?.text || '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage?.caption || '' }}{{ $('Webhook EVO').item.json.body.data.message.conversation || '' }}",
              "type": "string"
            },
            {
              "id": "b97f1af3-5361-46fc-9303-d644921231d8",
              "name": "message.timestamp",
              "value": "={{ $('Webhook EVO').item.json.body.data.messageTimestamp.toDateTime('s').toISO() }}",
              "type": "string"
            },
            {
              "id": "dc3dc59c-90a3-4a45-bea2-de092c91083b",
              "name": "message.content_url",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.audioMessage?.url || '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage?.url || '' }}",
              "type": "string"
            },
            {
              "id": "8b01a818-a456-476e-bace-adefe2f04eb4",
              "name": "message.event",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.fromMe ? 'outcoming' : 'incoming' }}",
              "type": "string"
            },
            {
              "id": "b2f1f6b5-292f-4695-9e41-be200c6d7053",
              "name": "instance.name",
              "value": "={{ $json.body.instance }}",
              "type": "string"
            },
            {
              "id": "572fcce5-8a26-4e8f-a48a-ef0bee569dcd",
              "name": "instance.apikey",
              "value": "={{ $json.body.apikey }}",
              "type": "string"
            },
            {
              "id": "e90043db-657b-461c-b040-2d6089abfbdb",
              "name": "instance.server_url",
              "value": "={{ $json.body.server_url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2cd5b43d-8a57-4591-8d01-a2d442cac946",
      "name": "dados_para_atendimento_humano1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4800,
        1440
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Ia Ativa"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "3ef0e01c-cc14-4663-bb4d-2905b350c3ab",
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "true",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Ia Desativada"
            }
          ]
        },
        "options": {}
      },
      "id": "b56e2bdc-5b2d-4ce8-99dd-108710932434",
      "name": "Switch Block",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -4260,
        1540
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.event }}",
                    "rightValue": "outcoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "outcoming"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "d7b42536-638f-4128-b51b-6aa913e9d9bc",
                    "leftValue": "={{ $json.message.event }}",
                    "rightValue": "incoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "incoming"
            }
          ]
        },
        "options": {}
      },
      "id": "98fa582a-f332-4c7c-842f-9a888a10023d",
      "name": "Switch6",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -4620,
        1440
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $json.message.chat_id }}_block",
        "value": "true",
        "keyType": "string",
        "expire": true,
        "ttl": 120
      },
      "id": "ffdbb505-90da-4f5e-beae-a6a550fb7290",
      "name": "PARA IA",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -4420,
        1380
      ],
      "credentials": {
        "redis": {
          "id": "BDBV0IXWHWreEqF9",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "block",
        "key": "={{ $json.message.chat_id }}_block",
        "options": {}
      },
      "id": "ceff9f26-66b4-4280-a649-dcf99fcef5b8",
      "name": "Verificar Atendimento",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -4420,
        1540
      ],
      "credentials": {
        "redis": {
          "id": "BDBV0IXWHWreEqF9",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.ogg",
          "mimeType": "application/ogg"
        }
      },
      "id": "cd2520f0-430c-49c5-8a59-3be913317867",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2460,
        1340
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {
          "language": "pt"
        }
      },
      "id": "43534a80-b323-4e9f-8396-ef528266d365",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -2320,
        1300
      ],
      "credentials": {
        "openAiApi": {
          "id": "MgUovUkOF1DLLH9r",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "content": "# Pausa para Atendimento Humano",
        "height": 80,
        "width": 656,
        "color": 5
      },
      "id": "d18573eb-a9d6-4ff0-abc6-3eab4fe94b10",
      "name": "Sticky Note46",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4860,
        1280
      ]
    },
    {
      "parameters": {
        "content": "# Filtro de mensagem",
        "height": 80,
        "width": 356,
        "color": 5
      },
      "id": "bd783fb3-6e3c-470a-98ba-524c36333bc8",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2920,
        1100
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "message.content_url",
              "value": "={{ $('dados_para_atendimento_humano1').item.json.message.content_url }}",
              "type": "string"
            },
            {
              "id": "8964e7f9-96aa-4ada-b397-5d08b8f007a1",
              "name": "data",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "9dad189d-e040-4a96-b342-3d3503552ec3",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2580,
        1380
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "app",
              "condition": "eq",
              "keyValue": "skynet"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        360,
        1420
      ],
      "id": "840fde32-7d29-48e9-9a28-2f171edb520b",
      "name": "ListChats-Supabase2",
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chat_messages",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            },
            {
              "keyName": "active",
              "condition": "eq",
              "keyValue": "true"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        880,
        1440
      ],
      "id": "771cfe3f-7470-4cd3-8b00-be604323a576",
      "name": "ListMessages-Supabase2",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "conversas",
        "include": "specifiedFields",
        "fieldsToInclude": "id,message_type,created_at,user_message, bot_message,phone, conversation_id",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1140,
        1440
      ],
      "id": "9613a443-1dcd-4aeb-b491-9c4b3a6ad22f",
      "name": "Aggregate2"
    },
    {
      "parameters": {
        "jsCode": "return $('Aggregate2').all().map(item => {\n  // Tenta acessar a propriedade 'conversas' e verifica se ela √© um array\n  const conversas = item.json.conversas || []; // Garante que √© pelo menos um array vazio\n\n  if (!Array.isArray(conversas)) {\n    throw new Error(\"A propriedade 'conversas' n√£o √© um array.\");\n  }\n\n  // Processa cada conversa e verifica as mensagens\n  const textoUnico = conversas.map(conversa => {\n    const cliente = conversa.user_message || \"sem mensagem do chatbot\";\n    const agente = conversa.bot_message || \"sem resposta\";\n    \n    // Verifica se a data existe e formata\n    const dataOriginal = conversa.created_at || \"Data da Mensagem indispon√≠vel\";\n    const dataFormatada = dataOriginal !== \"Data da Mensagem indispon√≠vel\"\n      ? formatarData(dataOriginal)\n      : dataOriginal;\n\n    return `em: ${dataFormatada}\\n\\n - agente(chatbot): ${agente} \\n - cliente: ${cliente}\\n`;\n  }).join('\\n\\n');\n\n  // Retorna o texto final como resultado\n  return {\n    json: {\n      texto: textoUnico\n    }\n  };\n});\n\n// Fun√ß√£o para formatar a data\nfunction formatarData(dataString) {\n  const data = new Date(dataString); // Converte a string em objeto Date\n  if (isNaN(data)) {\n    return \"Data inv√°lida\"; // Retorna se a data n√£o for v√°lida\n  }\n  \n  // Formata no padr√£o DD/MM/YYYY HH:mm\n  const dia = String(data.getDate()).padStart(2, '0');\n  const mes = String(data.getMonth() + 1).padStart(2, '0'); // M√™s come√ßa em 0\n  const ano = data.getFullYear();\n  const horas = String(data.getHours()).padStart(2, '0');\n  const minutos = String(data.getMinutes()).padStart(2, '0');\n  \n  return `${dia}/${mes}/${ano} ${horas}:${minutos}`;\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1380,
        1440
      ],
      "id": "7694371b-fc4a-43d1-81b6-545662f3753f",
      "name": "Code6"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        600,
        1420
      ],
      "id": "d4161b42-0f40-4f04-915a-ae1504743cc1",
      "name": "Loop Over Items6"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Voc√™ √© um agente resumidor de casos dos clientes, voc√™ analisa a conversa entre o agente e o cliente e cria um resumo do problema que ele est√° enfrentando de forma bem detalhada somente do problema do cliente e preferencia pela data da sess√£o, n√£o precisa de informa√ß√µes sobre as respostas do agente para o cliente, e gera o resultado sem dicas de uso ou informa√ß√µes extras \n\n# Conversa entre o cliete e o agente de IA:\n{{ $json.texto }}"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1620,
        1420
      ],
      "id": "b717d5df-4483-4a13-8703-d8a02d8113c6",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1560,
        1580
      ],
      "id": "f622fd38-8dfa-4434-9634-7711867c427c",
      "name": "OpenAI Chat Model6",
      "credentials": {
        "openAiApi": {
          "id": "MgUovUkOF1DLLH9r",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 400,
        "width": 2200,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        20,
        1300
      ],
      "typeVersion": 1,
      "id": "c77b73e9-9840-4f4a-81ed-8e858191a8b2",
      "name": "Sticky Note47"
    },
    {
      "parameters": {
        "content": "# AVISAR NOVO LEAD NO GRUPO",
        "height": 80,
        "width": 656,
        "color": 5
      },
      "id": "d2248677-107f-468c-94f9-d89b961ef8d5",
      "name": "Sticky Note51",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        40,
        1320
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Sofia",
        "remoteJid": "={{ $('Vari√°veis').item.json.telefone }}",
        "messageText": "={{ $json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        100,
        1420
      ],
      "id": "8fa5de63-d6ac-4214-902e-dc48ce4bdc95",
      "name": "Evolution API4",
      "credentials": {
        "evolutionApi": {
          "id": "TYMFez7AZEmuKDhe",
          "name": "Evolution TALOS"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Sofia",
        "remoteJid": "120363419441425821@g.us",
        "messageText": "=üö® Novo Lead: wa.me/{{ $('Vari√°veis').item.json.telefone.split('@')[0] }} üö®\n Cliente: {{ $('Webhook EVO').item.json.body.data.pushName }}\n\nCASO:\n{{ $json.text }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1960,
        1420
      ],
      "id": "3132968a-0841-4840-a619-5c6f5d515449",
      "name": "Evolution API8",
      "credentials": {
        "evolutionApi": {
          "id": "TYMFez7AZEmuKDhe",
          "name": "Evolution TALOS"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "skynet2",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -5280,
        1480
      ],
      "id": "7818af8b-144a-4303-847a-b394becc4ea4",
      "name": "Webhook EVO",
      "webhookId": "18111790-b65f-4239-9cdd-fccf3370fdfb",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a0dd281e-bdb6-4ff0-aa74-b048939cf831",
              "name": "",
              "value": "={{$json.nome || \"Cliente\"}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5040,
        1480
      ],
      "id": "4d725857-3ae5-4e6b-8105-ffb3b9735b8b",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "content": "",
        "height": 720,
        "width": 2520,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -7540,
        -680
      ],
      "typeVersion": 1,
      "id": "9e8a045e-ad73-48cd-9036-49b4092b11ef",
      "name": "Sticky Note60"
    },
    {
      "parameters": {
        "content": "# DISPARADOR",
        "height": 80,
        "width": 256,
        "color": 5
      },
      "id": "5344950e-48a1-455a-86e8-a2f7d7c85742",
      "name": "Sticky Note68",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -7400,
        -660
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# Voc√™ √© um agente facilitador de vendas e est√° buscando conversas n√£o finalizadas entre o cliente e um agent de IA. \n\n# Cria a responda apenas a resposta n√£o precisa justificar sua resposta\n\n# Identifique o cliente n√£o enviou mais mensagens de resposta\n\n# Se o cliente n√£o responder mesmo assim, agrade√ßa e diga que ir√° encerrar o pedido e est√° a disposi√ß√£o para outros pedidos\n\n# Use frase simples e naturais como nos exemplos\n\nExemplos : \n - 'Oi .. ainda est√° ai'\n - 'E ai ? vamos finalizar o pedido?' \n\n# Conversa entre o cliete e o agente de IA:\n{{ $json.texto }}"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -3960,
        1740
      ],
      "id": "c29ee6f0-b546-4cbb-ab4c-7a883bc64cc8",
      "name": "Agente Follow Up"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Edit Fields5').item.json.Tempo }}",
        "options": {
          "systemMessage": "=Voc√™ foi acionado pois vai avisar quanto tempo falta para a reuni√£o, diga apenas o tempo que falta e se precisa de algo antes da reuni√£o, sem dicas de uso ou informa√ß√µes extras"
        }
      },
      "id": "76e031de-d133-4cfa-839a-46c833c0ad72",
      "name": "Atendente Chegando Call",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -1440,
        2420
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "9df1822d-7339-4522-83fe-428ab273b0ac",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -6100,
        -620
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1WbnTpLlkZiJ840i7xFq9OriTHAkttyvVge5TPvw78Vw",
          "mode": "list",
          "cachedResultName": "C√≥pia de AUDTAX - DISPARADOR",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WbnTpLlkZiJ840i7xFq9OriTHAkttyvVge5TPvw78Vw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1870596170,
          "mode": "list",
          "cachedResultName": "NUMEROS",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WbnTpLlkZiJ840i7xFq9OriTHAkttyvVge5TPvw78Vw/edit#gid=1870596170"
        },
        "options": {}
      },
      "id": "ab5e2170-e9fc-4d28-a86c-d3a77887b8d7",
      "name": "Pegar lista de leads",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.3,
      "position": [
        -6320,
        -620
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Dj6DR5Chb0xYbnqN",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1WbnTpLlkZiJ840i7xFq9OriTHAkttyvVge5TPvw78Vw",
          "mode": "list",
          "cachedResultName": "C√≥pia de AUDTAX - DISPARADOR",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WbnTpLlkZiJ840i7xFq9OriTHAkttyvVge5TPvw78Vw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "MENSAGEIRO",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WbnTpLlkZiJ840i7xFq9OriTHAkttyvVge5TPvw78Vw/edit#gid=0"
        },
        "options": {}
      },
      "id": "fbdb2c02-c60b-4972-9123-be078cd0233b",
      "name": "Pegar mensagem",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.3,
      "position": [
        -6700,
        -620
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Dj6DR5Chb0xYbnqN",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "amount": "={{ $item(\"0\").$node[\"Gerar n√∫mero\"].json[\"randomNumber\"] }}"
      },
      "id": "d88fa780-14fb-4734-b5d4-2185428bc0a7",
      "name": "Delay",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -6880,
        -340
      ],
      "webhookId": "b10f2338-86d1-4a16-b45c-14513cad6551"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "0c5f5f0f-7d04-439a-8b31-6e7ff7fd7345",
              "leftValue": "={{ $json.active }}",
              "rightValue": "\"true\"",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7d69e43c-0eaa-4aaf-96f5-c30cb1de1619",
      "name": "Verificar Status",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -5740,
        -580
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.url_motada }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Dados').item.json.api_key1 }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"{{ $('Pegar lista de leads').item.json.tel }}\",\n  \"text\": \"Ol√°, {{ $('Verificar Status').item.json.name }}! {{ $('Atendente').item.json.output }}\"\n}",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "43c2ea16-3380-4833-b02a-6d97f51b1631",
      "name": "Enviar Mensagem 1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -5600,
        -360
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2f32f35f-e985-47e0-be28-f6959d9844a9",
              "name": "api_url",
              "value": "https://api.agenciatalos.com.br/",
              "type": "string"
            },
            {
              "id": "4291ce09-2085-4137-b13e-37949e349c36",
              "name": "api_instance1",
              "value": "SKYNET",
              "type": "string"
            },
            {
              "id": "4331c9c5-4713-4c11-8c08-c703e2c63332",
              "name": "api_key1",
              "value": "C4F317323689-4DC7-86C9-BAB461C1D10D",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "51928afd-ece7-4bd7-9820-72a4e63c0a9a",
      "name": "Dados",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -6900,
        -620
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Dados').item.json.api_url }}/message/sendText/{{ $('Dados').item.json.api_instance2 }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Dados').item.json.api_key2 }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"number\": \"{{ $('Pegar lista de leads').item.json.tel }}\",\n    \"text\": \"{{ $('OpenAI2').item.json.message.content }}\"\n}",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "72306aee-cced-4555-8475-225d94e9765c",
      "name": "Enviar Mensagem 2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -5580,
        -180
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1WbnTpLlkZiJ840i7xFq9OriTHAkttyvVge5TPvw78Vw",
          "mode": "list",
          "cachedResultName": "C√≥pia de AUDTAX - DISPARADOR",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WbnTpLlkZiJ840i7xFq9OriTHAkttyvVge5TPvw78Vw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "MENSAGEIRO",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1es4TCZ7gYTZh2YX7pifixqyjTGxiXOug4WiRa-P72V4/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "row_number": "={{ $('Pegar mensagem').item.json.row_number }}",
            "STATUS": "Disparando"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "MENSAGEM",
              "displayName": "MENSAGEM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "STATUS",
              "displayName": "STATUS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "72289564-1fba-40dc-9026-bb551c8e1e5c",
      "name": "Atualizar Status",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.3,
      "position": [
        -6500,
        -620
      ],
      "alwaysOutputData": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Dj6DR5Chb0xYbnqN",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1WbnTpLlkZiJ840i7xFq9OriTHAkttyvVge5TPvw78Vw",
          "mode": "list",
          "cachedResultName": "C√≥pia de AUDTAX - DISPARADOR",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WbnTpLlkZiJ840i7xFq9OriTHAkttyvVge5TPvw78Vw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "MENSAGEIRO",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1es4TCZ7gYTZh2YX7pifixqyjTGxiXOug4WiRa-P72V4/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "row_number": "={{ $('Pegar mensagem').item.json.row_number }}",
            "STATUS": "Finalizado"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "MENSAGEM",
              "displayName": "MENSAGEM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "STATUS",
              "displayName": "STATUS",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "17426d92-2904-4dcf-bfd5-dbb0f9a6780f",
      "name": "Atualizar Status1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.3,
      "position": [
        -5380,
        -640
      ],
      "alwaysOutputData": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Dj6DR5Chb0xYbnqN",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1WbnTpLlkZiJ840i7xFq9OriTHAkttyvVge5TPvw78Vw",
          "mode": "list",
          "cachedResultName": "C√≥pia de AUDTAX - DISPARADOR",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WbnTpLlkZiJ840i7xFq9OriTHAkttyvVge5TPvw78Vw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1870596170,
          "mode": "list",
          "cachedResultName": "NUMEROS",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1es4TCZ7gYTZh2YX7pifixqyjTGxiXOug4WiRa-P72V4/edit#gid=1870596170"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "active": "true",
            "tel": "={{ $('Pegar lista de leads').item.json.tel }}",
            "row_number": "={{ $('Pegar lista de leads').item.json.row_number }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "tel",
              "displayName": "tel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "active",
              "displayName": "active",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "aa9d526d-e884-4a58-bf37-0a797d2b76ce",
      "name": "Atualizar Active",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.3,
      "position": [
        -5260,
        -160
      ],
      "alwaysOutputData": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Dj6DR5Chb0xYbnqN",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Executa o c√≥digo de gera√ß√£o do n√∫mero aleat√≥rio\nconst min = 5;\nconst max = 10;\nconst randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\n\n// Retorna o valor em um array de objetos com a propriedade \"json\"\nreturn [\n  {\n    json: {\n      randomNumber: randomNumber,\n    },\n  },\n];"
      },
      "id": "eceb4aa6-286b-4e13-bb1d-d70a4983e004",
      "name": "Gerar n√∫mero",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7080,
        -340
      ]
    },
    {
      "parameters": {
        "jsCode": "randomNumber = Math.floor(Math.random() * 1) + 1;\n\nreturn [\n  {\n    json: {\n      randomNumber: randomNumber\n    }\n  }\n]"
      },
      "id": "be63fcec-e4fb-452b-8710-925d292ddadf",
      "name": "Gerar n√∫mero1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6340,
        -320
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.randomNumber }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Instancia 1"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f6145ca8-af77-489d-8abe-92f995e4e453",
                    "leftValue": "={{ $json.randomNumber }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Instancia 2"
            }
          ]
        },
        "options": {}
      },
      "id": "c3357cf6-6e04-4b5c-a9e7-a7a438ec1706",
      "name": "Switch5",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -6120,
        -320
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "42 8 * * 1-6"
            }
          ]
        }
      },
      "id": "3c718e28-d2ab-49c4-86c9-b4cc95b8c3c0",
      "name": "Schedule Trigger3",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -7080,
        -620
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "SKYNET",
        "remoteJid": "={{ $('Verificar Status').item.json.tel }}",
        "messageText": "=",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -5220,
        -380
      ],
      "id": "4238dc5b-c8f1-478c-a8ac-87d99ef87899",
      "name": "Evolution API9",
      "alwaysOutputData": false,
      "credentials": {
        "evolutionApi": {
          "id": "TYMFez7AZEmuKDhe",
          "name": "Evolution TALOS"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Envie essa mansagem:\n\nOl√°, {{$('Pegar lista de leads').item.json.nome}}! Sou da empresa XYZ. #lead_disparo Como vai? Recebi uma indica√ß√£o sobre voc√™ e achei que seria interessante te apresentar nosso sistema de atendimento com Intelig√™ncia Artificial..., especialmente desenvolvido para escrit√≥rios de advocacia. Podemos conversar um pouquinho?",
        "options": {
          "systemMessage": "=Me da a resposta sem dicas de uso ou textos adicionais"
        }
      },
      "id": "2d878035-01d6-40f1-bb04-d5df33dbd538",
      "name": "Atendente",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -6700,
        -320
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -6720,
        -180
      ],
      "id": "543d92a6-00ea-44a6-a7d0-e182b4d7bca1",
      "name": "OpenAI Chat Model7",
      "credentials": {
        "openAiApi": {
          "id": "MgUovUkOF1DLLH9r",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "042528b4-d074-418e-98e7-0e3f007f3430",
              "name": "url_motada",
              "value": "={{ $('Dados').item.json.api_url.replace(/\\/$/, '') }}/message/sendText/{{ $('Dados').item.json.api_instance1 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5800,
        -380
      ],
      "id": "1d5625ff-b2b1-4e55-a051-b55891bcc90f",
      "name": "Edit Fields10"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.randomNumber }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Instancia 1"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f6145ca8-af77-489d-8abe-92f995e4e453",
                    "leftValue": "={{ $json.randomNumber }}",
                    "rightValue": 2,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Instancia 2"
            }
          ]
        },
        "options": {}
      },
      "id": "0485df0c-004c-455b-938e-445efb79b05b",
      "name": "Switch7",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -6080,
        -160
      ]
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      message: \"Ol√°, {{ $('Pegar lista de leads').item.json.name }}! Como vai? Recebi uma indica√ß√£o sobre voc√™ e achei que seria interessante te apresentar nosso sistema de atendimento com Intelig√™ncia Artificial, especialmente desenvolvido para escrit√≥rios de advocacia. Podemos conversar um pouquinho?\"\n    }\n  },\n  {\n    json: {\n      message: \"Oi, {{ $('Pegar lista de leads').item.json.name }}! Tudo bem? Peguei seu contato por indica√ß√£o e gostaria de te mostrar uma solu√ß√£o com IA que pode agilizar muito a rotina do seu escrit√≥rio. Podemos conversar por um minuto?\"\n    }\n  },\n  {\n    json: {\n      message: \"Oi, {{ $('Pegar lista de leads').item.json.name }}! Como voc√™ est√°? Recebi uma indica√ß√£o sua e quero te mostrar como nossa Intelig√™ncia Artificial pode otimizar o atendimento do seu escrit√≥rio de forma r√°pida e pr√°tica. Que tal um bate-papo?\"\n    }\n  }\n];"
      },
      "id": "30dc40a8-3bf3-4b95-b0da-bd8f9e2951c7",
      "name": "Gerar Mensagem",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6360,
        -140
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 380,
        "width": 820,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -840,
        1720
      ],
      "typeVersion": 1,
      "id": "a7f4a207-498e-4571-9344-5af6617acca3",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "content": "# AGENDAMENTOS",
        "height": 80,
        "width": 336,
        "color": 5
      },
      "id": "4deeb1dd-458e-4114-a3a0-4c74b6705474",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -360,
        1980
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"mensagemAudioUnica\": \"{{ $('Webhook EVO').item.json.messageTimestamp || $now }}\",\n  \"chaveUnicaRedis\": \"{{ $('Code1').item.json.sessionId }}_{{ $('Webhook EVO').item.json.messageTimestamp || $now }}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2720,
        1400
      ],
      "id": "ca13bcae-faad-4742-a3f8-020ba0a51b88",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para consultar a disponibilidade de hor√°rio de reuni√µes marcadas",
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "9c76ab6656ebdab0718b137f28bb5c7fcd39ab6de96017fb2f087ad64b3cce56@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "[T.IA] - Calls"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -520,
        1760
      ],
      "id": "de6f4f32-19b3-4967-9a16-06b4472afbd1",
      "name": "Buscar_Eventos1",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "xQ5iGecKbkp1HJdP",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "=Utilize esta ferramenta para agendar a reuni√£o com o Higor\n\nAten√ß√£o: Antes de realizar o agendamento, verifique a disponibilidade da agenda utilizando a ferramenta apropriada.\n\nInforma√ß√µes necess√°rias para agendar:\nNome, caso tenha mais de uma pessoas adicone\nE-mail, caso tenha mais de uma pessoas adicone\n\nCaso alguma dessas informa√ß√µes n√£o esteja dispon√≠vel, entre em contato com o cliente para colet√°-las.\n\nHor√°rio permitido de criar um evento √© das 10 horas at√© as 17 horas, de segunda a sexta.\n\nAp√≥s agendar:\nCrie o evento\ne chame a tool \"agendamento\"\n\nData e hora atual: {{ $now }}",
        "calendar": {
          "__rl": true,
          "value": "9c76ab6656ebdab0718b137f28bb5c7fcd39ab6de96017fb2f087ad64b3cce56@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "[T.IA] - Calls"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', `Data e hor√°rio escolhido pelo contato`, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', `60 minutos depois do hor√°rio de inicio`, 'string') }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI('Attendees', ``, 'string') }}"
          ],
          "conferenceDataUi": {
            "conferenceDataValues": {
              "conferenceSolution": "hangoutsMeet"
            }
          },
          "description": "={{ $fromAI ('nome') }}! \n\nSou o Higor, e nesse nosso primeiro bate-papo vamos conversar para entender como podemos ajudar seu escrit√≥rio com solu√ß√µes de IA eficientes e personalizadas.\n\nJ√° deixe separadas suas d√∫vidas e expectativas ‚Äî assim conseguimos fazer um diagn√≥stico inicial e te mostrar uma demonstra√ß√£o pr√°tica!",
          "summary": "=ia.Talos + {{ $fromAI ('nome') }}! "
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -340,
        1800
      ],
      "id": "33373069-f706-4c44-9ebb-42ef6a48f50d",
      "name": "Criar_Evento1",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "xQ5iGecKbkp1HJdP",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para buscar agendamentos",
        "operation": "getAll",
        "tableId": "agendamentos",
        "returnAll": true,
        "filters": {
          "conditions": [
            {
              "keyName": "session_id",
              "condition": "eq",
              "keyValue": "={{ $json.sessionId }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        -740,
        1920
      ],
      "id": "8ea582fd-dc32-46c0-b2cb-911884ebdada",
      "name": "buscar_agendamentos1",
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para registrar um novo agendamento ap√≥s usar a ferramenta de Criar_Evento.\n\nSalve o event_id que retornou da ferramenta Criar_Evento.",
        "tableId": "agendamentos",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "event_id",
              "fieldValue": "={{ $fromAI('event_id') }}"
            },
            {
              "fieldId": "date",
              "fieldValue": "={{ $fromAI('date') }}"
            },
            {
              "fieldId": "session_id",
              "fieldValue": "={{ $fromAI('sessionId') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        -520,
        1920
      ],
      "id": "0ecf14ac-8611-4ae4-822b-038c392bfde8",
      "name": "agendamentos1",
      "credentials": {
        "supabaseApi": {
          "id": "m8vT3bvqCzb9bDkp",
          "name": "Supabase SKYNET"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para checar a disponibilidade de hor√°rios na agenda.\n\nMandar ao contato os hor√°rios dispon√≠veis como um todo.",
        "resource": "calendar",
        "calendar": {
          "__rl": true,
          "value": "9c76ab6656ebdab0718b137f28bb5c7fcd39ab6de96017fb2f087ad64b3cce56@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "[T.IA] - Calls"
        },
        "timeMin": "={{ $fromAI('inicio') }}",
        "timeMax": "={{ $fromAI('fim') }}",
        "options": {
          "outputFormat": "raw",
          "timezone": {
            "__rl": true,
            "value": "America/Sao_Paulo",
            "mode": "list",
            "cachedResultName": "America/Sao_Paulo"
          }
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -740,
        1740
      ],
      "id": "595ccce9-bc09-4a64-bc5c-f70d6792abab",
      "name": "horarios_disponiveis1",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "xQ5iGecKbkp1HJdP",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta para deletar/cancelar uma reuni√£o ap√≥s solicita√ß√£o do contato\n\nUse o event_id gravado no banco de dados.\n\nConsulte o banco de dados antes de efetuar um cancelamento.",
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "9c76ab6656ebdab0718b137f28bb5c7fcd39ab6de96017fb2f087ad64b3cce56@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "[T.IA] - Calls"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', `Delete o evento solicitado `, 'string') }}",
        "options": {
          "sendUpdates": "all"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -160,
        1800
      ],
      "id": "ef1986ef-c777-40e4-abb4-b1b17e6d9ebf",
      "name": "cancelar_call1",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "xQ5iGecKbkp1HJdP",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Get Dados').item.json.sessionid }}",
        "contextWindowLength": 50
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -660,
        1460
      ],
      "id": "b44152ae-83e8-445f-b44e-e529b25c1131",
      "name": "Postgres Chat Memory2",
      "credentials": {
        "postgres": {
          "id": "UG5YhV2gAqdPfWm8",
          "name": "Postgres SKYNET"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -780,
        1520
      ],
      "id": "2c55f7a1-8b38-403f-a72b-8aaafd3fb234",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "MgUovUkOF1DLLH9r",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
        "options": {
          "systemMessage": "=horario_atual: {{ $now }}\n\nIdentidade e Papel da Sofia\nVoc√™ √© Sofia, SDR da Talos, uma ag√™ncia de marketing especializada em automa√ß√µes e intelig√™ncia artificial para escrit√≥rios de advocacia.\n\nSua atua√ß√£o √© sempre via WhatsApp, com leads que j√° responderam alguma mensagem anterior ‚Äî jamais iniciando uma conversa do zero.\n\nSeu tom √© sempre de continuidade de uma conversa pendente: leve, natural e inteligente.\n\nüìá Informa√ß√µes do Lead\nNome da pessoa: voc√™ j√° tem\n{{ $('Webhook EVO').item.json.body.data.pushName.split(' ')[0] }}\n\nN√∫mero: voc√™ j√° tem\n{{ $('Webhook EVO').item.json.body.data.key.remoteJid }}\n\nSe for necess√°rio responder com o n√∫mero, remova o sufixo @s.whatsapp.net.\n\nTom e Linguagem\nSua linguagem deve ser:\n\nClara\n\nObjetiva\n\nHumanizada\n\nFeminina e estrat√©gica\n\nConsultiva (sem soar gen√©rica ou rob√≥tica)\n\nSe perguntarem se voc√™ √© um rob√¥, responda com leveza e ironia:\n\n‚ÄúHmm‚Ä¶ digamos que sim, talvez üòÖ\nMas √≥, se at√© eu sou uma IA e consigo conversar com clareza, imagina o que um sistema desses pode fazer pelo atendimento do seu escrit√≥rio, n√©? üòÑ‚Äù\n\nSobre a Talos\nSempre apresente a Talos antes de qualquer pergunta, mesmo que o lead diga ‚Äúpode falar‚Äù ou ‚Äút√¥ ouvindo‚Äù:\n\n‚ÄúN√≥s desenvolvemos uma intelig√™ncia artificial que atende via WhatsApp para advogados.\nEla entende a demanda do cliente, faz todo o atendimento inicial e direciona para o agendamento com o advogado.\nIsso reduz bastante a carga de atendimento e melhora a experi√™ncia do cliente.‚Äù\n‚ÄúMuito interessante, n√£o √© mesmo?‚Äù\n\nNunca antecipe detalhes t√©cnicos da IA, a menos que o lead pergunte.\n\nIn√≠cio da Conversa\nSempre comece com:\n\n‚ÄúOi! Aqui √© a Sofia üòä Que bom que respondeu, tudo bem por a√≠?‚Äù\n\nSe o lead j√° disse que est√° bem, n√£o repita.\n\nSe ele perguntar ‚Äúe com voc√™?‚Äù, diga:\n\n‚ÄúTudo √≥timo por aqui tamb√©m!‚Äù\n\nEm seguida, pe√ßa permiss√£o para apresentar a Talos:\n\n‚ÄúPosso te explicar rapidinho sobre a Talos?‚Äù\n\nEtapa de Investiga√ß√£o (ap√≥s apresenta√ß√£o da Talos)\nFa√ßa uma pergunta por vez, sempre aguardando a resposta antes de continuar.\n\n√Årea de atua√ß√£o:\n\n‚ÄúS√≥ para entender um pouco melhor a atua√ß√£o de voc√™s, qual √© a √°rea de maior foco?‚Äù\n\nVolume de contatos:\n\n‚ÄúComo tem sido o volume de contatos no dia a dia? Muitos clientes com d√∫vidas recorrentes?‚Äù\n\nPrincipais desafios:\n\n‚ÄúQual tem sido o maior desafio no dia a dia? Algo mais voltado a atendimento, prazos ou produtividade?‚Äù\n\nImpacto dos desafios:\n\n‚ÄúEntendi. Isso tem impactado mais o relacionamento com os clientes ou a opera√ß√£o interna?‚Äù\n\nFerramentas atuais:\n\n‚ÄúVoc√™s usam algum sistema hoje, tipo Projuris, Astrea, ADVBOX... ou fazem tudo no manual mesmo?‚Äù\n\nSe o lead desviar do assunto:\n\n‚ÄúAh, entendi! Posso te fazer uma pergunta r√°pida s√≥ pra entender se conseguimos realmente ajudar o escrit√≥rio?‚Äù\n\nQualifica√ß√£o\nContinue com uma pergunta por vez:\n\nVolume de atendimentos:\n\n‚ÄúQuantos atendimentos ou contatos novos o escrit√≥rio costuma receber por semana ou por m√™s?‚Äù\n\nFaturamento m√©dio mensal:\n\n‚ÄúE hoje, qual √© o faturamento m√©dio mensal do escrit√≥rio?‚Äù\n\nSe for abaixo de R$15 mil e sem outros sinais qualificadores, diga:\n\n‚ÄúObrigado por compartilhar. Pelo perfil atual, talvez ainda n√£o seja o melhor momento para aplicar esse tipo de automa√ß√£o.\nMas fico √† disposi√ß√£o pra te enviar dicas ou conte√∫dos √∫teis, sempre que quiser.\nUm abra√ßo e sucesso com o escrit√≥rio! ‚ú®‚Äù\n\nTamanho da equipe:\n\n‚ÄúQuantas pessoas trabalham com voc√™s hoje no escrit√≥rio?‚Äù\n\nAgendamento (quando qualificado)\nConvide para reuni√£o com Higor:\n\n‚ÄúShow! Posso agendar uma conversa r√°pida com o Higor, nosso especialista em automa√ß√µes.\nQual seria o melhor dia e hor√°rio pra uma videoconfer√™ncia de at√© 30 minutos?‚Äù\n\nAo receber resposta, pergunte:\n\n‚ÄúPerfeito! Para marcar certinho a reuni√£o, informe primeiro nome e qual e-mail posso usar pra te enviar o link da reuni√£o?‚Äù\n\nDepois:\n\n‚ÄúMais algu√©m vai participar da reuni√£o com voc√™?‚Äù\n\nSe sim, pe√ßa o e-mail da outra pessoa.\n\nPergunte com leveza:\n\n‚ÄúEssa pessoa √© sua s√≥cia?‚Äù\n(somente ap√≥s saber o g√™nero da pessoa)\n\nAo confirmar:\n\n‚ÄúReuni√£o confirmada! Vai ser um bate-papo bem estrat√©gico pra analisar solu√ß√µes que podem impulsionar ainda mais o escrit√≥rio. Nos vemos em breve!‚Äù\n\nFora do bloco da reuni√£o, finalize com:\n\n‚ÄúAh, voc√™s t√™m Instagram ou site? Gosto de dar uma olhada antes da reuni√£o pra entender melhor como o escrit√≥rio se posiciona. üòâ‚Äù\n\nSe n√£o for qualificado\n‚ÄúObrigado por compartilhar!\nPelo perfil atual, talvez ainda n√£o seja o melhor momento para aplicar esse tipo de automa√ß√£o.\nMas fico √† disposi√ß√£o pra te enviar dicas ou conte√∫dos √∫teis, sempre que quiser.\nUm abra√ßo e sucesso com o escrit√≥rio! ‚ú®‚Äù\n\nPerguntas Sens√≠veis\nSe perguntarem de onde veio o contato:\n\n‚ÄúBoa pergunta! üòÖ N√£o sei exatamente quem foi.\nNossos s√≥cios participam de v√°rios eventos e grupos de advogados, ent√£o pode ter vindo de l√°.‚Äù\n\nSe insistirem:\n\n‚ÄúEntendo sua preocupa√ß√£o.\nAqui na Talos levamos a LGPD a s√©rio. Seus dados est√£o protegidos e s√≥ entramos em contato com leads que tiveram algum tipo de intera√ß√£o direta ou indireta com nossos canais, parceiros ou eventos jur√≠dicos.\nSe quiser, posso remover seu contato sem problemas.‚Äù\n\nSe perguntarem sobre pre√ßo\n‚ÄúClaro, entendo como √© importante saber!\nA maioria dos escrit√≥rios que atendemos investe algo em torno de R$700 a R$1.000 por m√™s, dependendo da opera√ß√£o.\nMas o ideal √© entender melhor o seu cen√°rio primeiro, por isso vamos marcar uma reuni√£o com o Higor, nosso especialista, para poder alinhar isso com mais precis√£o.‚Äù\n\nEncerramento\nNunca envie mais de duas mensagens ap√≥s o encerramento.\n\nSeja elegante, objetiva, humana e profissional at√© o fim:\n\n‚ÄúReuni√£o confirmada! Nos vemos em breve.‚Äù\n\nRegras e Pr√°ticas Essenciais\nNunca fa√ßa duas perguntas antes de uma resposta.\n\nSempre aguarde a resposta antes de seguir.\n\nInterprete corretamente hor√°rios como:\nEx: 10h = 10 horas (v√°lido apenas de segunda a sexta, entre 10h e 17h).\n\nNunca diga ‚Äús√≥cia‚Äù antes de saber o g√™nero.\n\nUse emojis estrategicamente, com leveza, sem exageros.\n\nPara reagendar ou cancelar, use tools ‚Äî nunca a mem√≥ria do chat.\n\nBoas Pr√°ticas na Conversa\nEmpatia genu√≠na:\n\n‚ÄúEntendo como isso pode ser desafiador, deve ser bem cansativo, n√©? Mas podemos te ajudar a aliviar essa carga.‚Äù\n\nEscuta ativa e personaliza√ß√£o:\n\n‚ÄúAh, entendi. Parece que esse √© um ponto que realmente pesa no seu dia a dia. Podemos pensar em formas de otimizar esse processo‚Ä¶‚Äù\n\nRefor√ßos positivos:\n\n‚Äú√â muito legal ver como seu escrit√≥rio est√° crescendo, isso mostra o quanto o trabalho de voc√™s √© bem feito!‚Äù\n\nAntecipar obje√ß√µes com leveza:\n\n‚ÄúSei que investir em automa√ß√£o pode gerar algumas d√∫vidas... Mas o que tenho visto √© justamente uma redu√ß√£o de erros e mais agilidade.‚Äù\n\nPerguntas reflexivas:\n\n‚ÄúSe pudesse delegar tarefas repetitivas e economizar tempo, voc√™ n√£o acha que conseguiria focar mais no que realmente importa?‚Äù\n\nSolu√ß√µes personalizadas:\n\n‚ÄúCom base no que voc√™ me contou, conseguimos montar algo sob medida pro seu escrit√≥rio.‚Äù\n\nUrg√™ncia suave no fechamento:\n\n‚ÄúEssa conversa com o Higor pode ser o primeiro passo pra um grande avan√ßo no seu escrit√≥rio. Vai ser √≥timo ver o que podemos construir juntos!‚Äù"
        }
      },
      "id": "2c1e2225-ee19-45b0-aeef-1754adcea7b2",
      "name": "SOFIA",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -680,
        1220
      ]
    }
  ],
  "pinData": {
    "Evolution API5": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      },
      {
        "json": {
          "name": "Second item",
          "code": 2
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": [
        124
      ]
    },
    "node:Schedule Trigger1": {
      "recurrenceRules": []
    },
    "node:Schedule Trigger2": {
      "recurrenceRules": []
    },
    "node:File Created": {
      "lastTimeChecked": "2025-05-05T19:56:37Z"
    },
    "node:File Updated": {
      "lastTimeChecked": "2025-05-05T19:56:37Z"
    },
    "node:Schedule Trigger3": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 6,
  "updatedAt": "2025-05-07T20:00:26.108Z",
  "versionId": "d08e4ff3-be2b-41e5-a2d7-a914b1dcebe6"
}