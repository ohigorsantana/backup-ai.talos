{
  "active": false,
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Gerar número2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Dados Leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Nenhuma operação",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza Tabela": {
      "main": [
        [
          {
            "node": "Dados Leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados Leads": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Menos que 240 Caracteres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delay1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar número2": {
      "main": [
        [
          {
            "node": "Delay1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        []
      ]
    },
    "Atualiza Tabela2": {
      "main": [
        [
          {
            "node": "Dados Leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Dados Leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI4": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items5": {
      "main": [
        [],
        []
      ]
    },
    "OutputParser": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain1": {
      "main": [
        [
          {
            "node": "Split de Mensagem1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API3": {
      "main": [
        [
          {
            "node": "1 segundo1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Atualiza Tabela2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Menos que 240 Caracteres1": {
      "main": [
        [
          {
            "node": "Evolution API8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split de Mensagem1": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1 segundo1": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza Tabela",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-11T23:59:01.009Z",
  "id": "dH2FzXuvV42LVA2e",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[AI.T][DISPARADOR] - ODONTO",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "14c51024-a508-47cd-af23-21fc3ca4f3fb",
              "leftValue": "={{ $('Loop Over Items').item.json.Enviar }}",
              "rightValue": "=1",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -860,
        -280
      ],
      "id": "9a3ab0fb-9043-45d5-9c09-e63638e0be55",
      "name": "If"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1540,
        -260
      ],
      "id": "9e1da073-1043-4e36-8ef9-3a697356fc3c",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.1,
      "position": [
        -280,
        -80
      ],
      "id": "2aa82e82-fb63-4270-89e8-7fe802919948",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "MgUovUkOF1DLLH9r",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \t\"numero\": \"numero de telefone aqui\",\n    \"originalPhone\": \"numero de telefone original\",\n\t\"text\": \"mensagem enviada aqui\",\n  \"url\": \"link\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -80,
        -80
      ],
      "id": "a2356182-49ce-4cfa-8340-79274a2230fe",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1ETKAj8mWuw4WDO0CQLzXBeDUW58KqiR67WfzRW4yJoA",
          "mode": "list",
          "cachedResultName": "DISPARADOR_WHATSAPP",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ETKAj8mWuw4WDO0CQLzXBeDUW58KqiR67WfzRW4yJoA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 20437805,
          "mode": "list",
          "cachedResultName": "ODONTO",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ETKAj8mWuw4WDO0CQLzXBeDUW58KqiR67WfzRW4yJoA/edit#gid=20437805"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "phone": "={{ $('Edit Fields1').item.json.originalPhone }}",
            "Enviar": "FALSE"
          },
          "matchingColumns": [
            "phone"
          ],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Nome",
              "displayName": "Nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Services",
              "displayName": "Services",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "City",
              "displayName": "City",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Enviar",
              "displayName": "Enviar",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1620,
        0
      ],
      "id": "22d6f542-d780-4805-b3c9-1b52082a0297",
      "name": "Atualiza Tabela",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Dj6DR5Chb0xYbnqN",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<CONTATO>{{ $('If').item.json.contato }}</CONTATO>\n\n<EXEMPLO> Oii! Falo com {{ $('Loop Over Items').item.json.Nome.split(' ')[0] }}?\n\nVocê sabia que é possível automatizar o WhatsApp da sua clínica pra responder pacientes, marcar consultas e organizar tudo com IA, sem perder o toque humano? Posso te mostrar como funciona?\n\n## A mensagem deve ser exatamente como acima\n\n## Mande uma mensagem por vez!\n\n## Se o campo Loop Over Items estiver vazio, mande só olá!\n\ntelefoneOriginal: {{ $('If').item.json.originalPhone }}\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Você é uma assistente comercial e a sua função é mandar uma mensagem de whatsapp.\n\nA mensagem deve ser no modelo acima"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -280,
        -280
      ],
      "id": "3bf643b7-df9d-4e70-b0bb-32eaa4572b22",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1ETKAj8mWuw4WDO0CQLzXBeDUW58KqiR67WfzRW4yJoA",
          "mode": "list",
          "cachedResultName": "DISPARADOR_WHATSAPP",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ETKAj8mWuw4WDO0CQLzXBeDUW58KqiR67WfzRW4yJoA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 20437805,
          "mode": "list",
          "cachedResultName": "ODONTO",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ETKAj8mWuw4WDO0CQLzXBeDUW58KqiR67WfzRW4yJoA/edit#gid=20437805"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -1780,
        -260
      ],
      "id": "c0b35b2a-2c8c-42b8-82a7-7a809e34def6",
      "name": "Dados Leads",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Dj6DR5Chb0xYbnqN",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -700,
        -580
      ],
      "id": "95bad0d2-e941-4d93-8c12-256ac5af9fff",
      "name": "Nenhuma operação"
    },
    {
      "parameters": {
        "content": "## End\n****",
        "height": 240,
        "width": 380,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -840,
        -640
      ],
      "id": "cf2c0ce1-27c1-4f94-a680-da007533b794",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "14c8c098-ce7d-44f4-9ae0-5f6273bf1b43",
              "name": "text",
              "value": "={{ $json.output.text }}",
              "type": "string"
            },
            {
              "id": "a3cb0f7c-f455-4165-b8cc-375d4320a037",
              "name": "numero",
              "value": "={{ $('AI Agent').item.json.output.numero }}",
              "type": "string"
            },
            {
              "id": "adf512a2-60c8-4e62-acf6-7375bf4299cc",
              "name": "originalPhone",
              "value": "={{ $json.output.originalPhone }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        120,
        -280
      ],
      "id": "b0ebcc6e-e68c-4c18-b9e1-e75a3bfdb6de",
      "name": "Edit Fields1",
      "retryOnFail": false
    },
    {
      "parameters": {
        "jsCode": "return $input.all().map(item => {\n    // 1. Captura o telefone original\n    const originalPhone = item.json.phone || \"\";\n\n    // 2. Remove tudo que não for dígito\n    let contato = originalPhone.replace(/\\D/g, \"\");\n\n    // 3. Se tiver 11 dígitos, adiciona \"55\" no começo\n    if (contato.length === 11) {\n        contato = \"55\" + contato;\n    }\n\n    // 4. Verifica se possui exatamente 13 dígitos\n    const isValid = /^\\d{13}$/.test(contato);\n\n    // 5. Retorna o telefone original, o número ajustado e se é válido\n    return {\n        json: {\n            originalPhone,\n            contato,\n            valido: isValid\n        }\n    };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1300,
        -240
      ],
      "id": "978b229d-dc1f-4f0f-ab04-5b361f169b80",
      "name": "Code"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "53525ae6-7d8e-4a2a-ad50-57da6e042ee0",
              "leftValue": "={{ $json.valido }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1080,
        -240
      ],
      "id": "096d04c7-7762-4bb2-822b-d74aac92a6bc",
      "name": "If1"
    },
    {
      "parameters": {
        "content": "## Disparador",
        "height": 1000,
        "width": 4300,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2340,
        -760
      ],
      "id": "0dd4925d-cde9-4fff-9d94-20cb5550d65a",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Workflow Trigger\n**Acionar Fluxo**",
        "height": 440,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2080,
        -380
      ],
      "id": "5c69157e-e933-450b-a84b-a5813d271d43",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "amount": "={{ $item(\"0\").$node[\"Gerar número2\"].json[\"randomNumber\"] }}",
        "unit": "minutes"
      },
      "id": "7825c7bc-07bd-4c37-8483-640a82f3b783",
      "name": "Delay1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -460,
        -280
      ],
      "webhookId": "4a497d97-89a9-4348-92de-91355d008998"
    },
    {
      "parameters": {
        "jsCode": "// Executa o código de geração do número aleatório\nconst min = 10;\nconst max = 8;\nconst randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\n\n// Retorna o valor em um array de objetos com a propriedade \"json\"\nreturn [\n  {\n    json: {\n      randomNumber: randomNumber,\n    },\n  },\n];"
      },
      "id": "2eb6b3e9-983d-4249-9161-755a2ca3e367",
      "name": "Gerar número2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -660,
        -280
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2040,
        -600
      ],
      "id": "16eb663d-1032-4a44-977c-20f65fb9ab1d",
      "name": "Schedule Trigger1",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1ETKAj8mWuw4WDO0CQLzXBeDUW58KqiR67WfzRW4yJoA",
          "mode": "list",
          "cachedResultName": "DISPARADOR_WHATSAPP",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ETKAj8mWuw4WDO0CQLzXBeDUW58KqiR67WfzRW4yJoA/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 20437805,
          "mode": "list",
          "cachedResultName": "ODONTO",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ETKAj8mWuw4WDO0CQLzXBeDUW58KqiR67WfzRW4yJoA/edit#gid=20437805"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "phone": "={{ $('Edit Fields1').first().json.originalPhone }}",
            "Enviar": "FALSE"
          },
          "matchingColumns": [
            "phone"
          ],
          "schema": [
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Nome",
              "displayName": "Nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Services",
              "displayName": "Services",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "City",
              "displayName": "City",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Enviar",
              "displayName": "Enviar",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -840,
        -100
      ],
      "id": "fdf6172e-b6c7-4b0c-aff7-a37473e6f39e",
      "name": "Atualiza Tabela2",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Dj6DR5Chb0xYbnqN",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -2000,
        -260
      ],
      "id": "b4dba1ea-8798-4f47-919d-b74fccfb86d7",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "4f4e621e-d61c-409b-be76-a666f9126fef",
      "name": "OpenAI4",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        600,
        -200
      ],
      "credentials": {
        "openAiApi": {
          "id": "MgUovUkOF1DLLH9r",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c0e3e914-a1dd-4201-b569-cb6e46b2bfda",
      "name": "Loop Over Items5",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1020,
        -360
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "e60d01ef-1cd9-4d48-991d-4cea5fc83695",
      "name": "OutputParser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        720,
        -200
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.text }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, não é mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Sempre que tiver um link envie ele de forma separada sem alteração\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- ~tachado~ (caso seja algo que foi excluído ou alterado)\n\t\t\t- _itálico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)"
            }
          ]
        }
      },
      "id": "dae17916-dc15-44a2-9112-198588d482cd",
      "name": "Parser  Chain1",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        560,
        -360
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Sofia",
        "remoteJid": "={{ $('Menos que 240 Caracteres1').item.json.numero }}",
        "messageText": "={{ $json.output }}",
        "options_message": {
          "delay": 1800,
          "linkPreview": false
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1320,
        -340
      ],
      "id": "2d7fe979-013d-44a3-820a-0ba4c93e0ebe",
      "name": "Evolution API3",
      "retryOnFail": false,
      "credentials": {
        "evolutionApi": {
          "id": "TYMFez7AZEmuKDhe",
          "name": "Evolution TALOS"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "Sofia",
        "remoteJid": "={{ $('Variáveis').item.json.telefone }}",
        "messageText": "={{ $json.output }}",
        "options_message": {
          "delay": 1200
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        600,
        -540
      ],
      "id": "57797307-a519-4501-887b-634323913e64",
      "name": "Evolution API8",
      "credentials": {
        "evolutionApi": {
          "id": "TYMFez7AZEmuKDhe",
          "name": "Evolution TALOS"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7c4cdb12-9452-42a6-a39a-c268bd38dce1",
              "leftValue": "={{ $json.output.lenght }}",
              "rightValue": 90,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        340,
        -280
      ],
      "id": "3510b4a0-088b-494e-b0c4-e259355b0b85",
      "name": "Menos que 240 Caracteres1"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "7091d84d-bb2a-4922-a63e-755471bd88dd",
      "name": "Split de Mensagem1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        860,
        -360
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "64befb9a-98d9-4732-bffa-a706ff9217bf",
      "name": "1 segundo1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1580,
        -360
      ],
      "webhookId": "28412017-1182-4b80-9cdc-e5c9b466cfe5"
    }
  ],
  "pinData": {
    "Evolution API8": [
      {
        "json": {
          "name": "First item",
          "code": 1
        }
      },
      {
        "json": {
          "name": "Second item",
          "code": 2
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    },
    "node:Schedule Trigger1": {
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2025-05-13T14:53:30.685Z",
      "updatedAt": "2025-05-13T14:53:30.685Z",
      "id": "BjrtG5Bg3LeeeY9m",
      "name": "Odonto"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-05-13T20:04:45.849Z",
  "versionId": "98b1d54d-8311-4671-ae52-26d6be8187be"
}